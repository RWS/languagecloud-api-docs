{
  "apiconcepts/overview.html": {
    "href": "apiconcepts/overview.html",
    "title": "RWS Language Cloud Public API",
    "keywords": "RWS Language Cloud Public API The RWS Language Cloud Public API enables external applications to interact with RWS Language Cloud. Product Configurations This applies to all products that are based on RWS Language Cloud, including Language Cloud Translation Managament, Trados Live Team and Trados Live Essential. Note that, depending on the product and specific product configuration, certain functionalities may not be available or the rate might be limited through the API . In general, when certain functionality is available in your specific product configuration, the corresponding endpoints will also be available in the API . Functionality Overview At present, the public API contains mainly functionality that enables the creation, management and tracking of cloud translation projects. Any other resources, such as project templates, pricing models or translation memories, need to be set up beforehand through the user interface. Types of Integrations At the moment, the RWS Language Cloud API can be called by custom (integration) applications on behalf of service users (non-human users). The ability to call the API on behalf of real end users will be supported at a later point. Where to find the API Documentation The API documentation is currently hosted here - RWS Language Cloud Public API"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Welcome to the Language Cloud API documentation.",
    "keywords": "Welcome to the Language Cloud API documentation. Here youâ€™ll find all the information you need to get started developing your own Language Cloud plugin. Discover quick guides explaining how to build, develop and deploy your app, plus hints and tips to help you make the most of our APIs. Should you have any ideas as to how we can improve this documentation, any new topics you think we should include or hints and tips you would like to share with the developer community, please let us know. To let us know what your suggested improvements are you can do this by using the \" Improve this Doc \" link on the top right of every page. You will need your own github account for this because this action will create a fork of the repository in your account where you can make the changes and then submit a pull request for us to review and accept. Good luck and happy developing!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Access the Language Cloud APIs",
    "keywords": "Access the Language Cloud APIs Learn more about Language Cloud APIs Learn more about the APIs and what you can achieve with them. Articles Read articles on how to get more out of Language Cloud."
  },
  "README.html": {
    "href": "README.html",
    "title": "LanguageCloud-api-docs",
    "keywords": "LanguageCloud-api-docs What is it? This the main repository for the Language Cloud Public API documentation. Can I contribute? Anyone is welcome to contribute to the public Language Cloud API documentation by making a pull request into the master repository. The documentation is split into the following sections: Articles This section hosts a series of usefull article on: how to get started with writing plug-ins for Language Cloud how to best use the public APIs how to troubleshoot common issues API Concepts This section hosts the main guidelines on using the Public API along with the API References Getting started with your contribution The documentation is built using a static documentation generator called DocFX . The documentation content is saved in Markdown files and then built into a website using DocFX . The table of content is saved into separate toc.yml files. In order for you to make a contribution directly please follow the next steps: Create a local branch from the main repository Add your changes by modifying existing Markdown files or by adding new Markdown files Adding new files will require updating the toc.yml files. Use the guideline provided by DocFX to learn more. You can use tools such as Notepad++ or Visual Studio Code to edit the content Create a Pull Request with your changes. This pull request will be reviewed for correctness by one of our technical writers Once your pull request has been approved and committed into the main branch, an automatic pipeline will be triggered which will push your changes to the live documentation site if you wish to test your changes locally you can follow the DOCFX Installation guideline and build the entire solution locally Our documentation automatically fills in the product name and other details so you don't have to make the changes manually if we decide to update the product name. Use the '<var:VariableName>' construct to tell our documentation engine to fill in the info for you. Here are the constructs available at this point: <var:ProductName> - The product name, for example Language Cloud"
  }
}