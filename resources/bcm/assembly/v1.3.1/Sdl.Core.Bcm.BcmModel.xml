<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sdl.Core.Bcm.BcmModel</name>
    </assembly>
    <members>
        <member name="T:Sdl.Core.Bcm.BcmModel.Alignment.AlignmentData">
            <summary>
            Alignment related information.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Alignment.AlignmentData.TuId">
            <summary>
            The TranslationUnit identifier.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Alignment.AlignmentData.ContentInsertDate">
            <summary>
            Gets or sets the alignment content insert date.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Alignment.AlignmentData.ModelDate">
            <summary>
            Gets or sets the alignment model creation date.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Alignment.AlignmentData.SpanPairSet">
            <summary>
            Collection of <see cref="T:Sdl.Core.Bcm.BcmModel.Alignment.SpanPairNode"/> alignments subject to bilingual compositionality constraints.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Alignment.AlignmentData.IncompatibleSpanPairSet">
            <summary>
            Collection of <see cref="T:Sdl.Core.Bcm.BcmModel.Alignment.SpanPairNode"/> incompatible alignments.
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Alignment.LiftSpan">
            <summary>
            A class to represent a continous span of items in an ordered sequence
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Alignment.LiftSpan.StartIndex">
            <summary>
            The zero-based start index of the span.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Alignment.LiftSpan.Length">
            <summary>
            The length of the span (number of items that it covers in the sequence).
            </summary>        
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Alignment.SpanPairNode">
            <summary>
            Stores information about an alignment between a pair of <see cref="T:Sdl.Core.Bcm.BcmModel.Alignment.LiftSpan"/> objects.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Alignment.SpanPairNode.SourceSpan">
            <summary>
            The source <see cref="T:Sdl.Core.Bcm.BcmModel.Alignment.LiftSpan"/>.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Alignment.SpanPairNode.TargetSpan">
            <summary>
            The target <see cref="T:Sdl.Core.Bcm.BcmModel.Alignment.LiftSpan"/>.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Alignment.SpanPairNode.Confidence">
            <summary>
            A value indicating how reliable this alignment should be considered to be.
            A zero value indicates that no reliability-value can be applied. Otherwise, the value should be no greater than 1, which indicates maximum reliability.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Alignment.SpanPairNode.Provenance">
            <summary>
            A value recording how the alignment was produced.
            <list type="table">
            <listheader><term>Value</term><description>Description</description></listheader>
                <item><term>1</term><description>NodeAlignment</description></item>
                <item><term>2</term><description>SeedConfirmation</description></item>
                <item><term>3</term><description>PlaceableAlignment</description></item>
                <item><term>4</term><description>PhraseExtractor</description></item>
                <item><term>5</term><description>Structure</description></item>
                <item><term>6</term><description>TrainedAligner</description></item>
                <item><term>7</term><description>Other</description></item>
            </list>
            </summary>       
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Annotations.AnnotationContainer">
            <summary>
            Abstract <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupDataContainer"/>, marking a user annotation on the BCM.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Annotations.AnnotationContainer.AnnotationId">
            <summary>
            The annotation ID.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Annotations.AnnotationContainer.Equals(Sdl.Core.Bcm.BcmModel.MarkupData)">
            <summary>
            <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/> based equality.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Annotations.AnnotationContainer.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Annotations.AnnotationContainer.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Annotations.CommentContainer">
            <summary>
            An <see cref="T:Sdl.Core.Bcm.BcmModel.Annotations.AnnotationContainer"/> representing user comments.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Annotations.CommentContainer.CommentDefinitionId">
            <summary>
            Gets or sets the comment definition ID.
            </summary>
            <value>
            The comment definition ID.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Annotations.CommentContainer.Type">
            <summary>
            Gets the <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/> type.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Annotations.CommentContainer.Definition">
            <summary>
            Gets the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.CommentDefinition"/>.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Annotations.CommentContainer.AcceptVisitor(Sdl.Core.Bcm.BcmModel.Common.BcmVisitor)">
            <summary>
            Accepts a visitor of type <see cref="T:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor" />.
            </summary>
            <param name="visitor">The <see cref="T:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor" /> used to visit this item.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Annotations.CommentContainer.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The clone.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Annotations.CommentContainer.UniqueClone">
            <summary>
            Clones this instance using a new uniqueu ID.
            </summary>
            <returns>The clone.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Annotations.CommentContainer.Equals(Sdl.Core.Bcm.BcmModel.MarkupData)">
            <summary>
              <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData" /> based equality.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Annotations.CommentContainer.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Annotations.CommentContainer.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Annotations.TerminologyAnnotationContainer">
            <summary>
            An <see cref="T:Sdl.Core.Bcm.BcmModel.Annotations.AnnotationContainer"/> representing terminology-related annotations.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Annotations.TerminologyAnnotationContainer.TerminologyDataId">
            <summary>
            Gets or sets the terminology data identifier.
            </summary>
            <value>
            The terminology data identifier.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Annotations.TerminologyAnnotationContainer.Definition">
            <summary>
            Gets the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.TerminologyData"/> definition.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Annotations.TerminologyAnnotationContainer.Type">
            <summary>
            Gets the <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/> type.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Annotations.TerminologyAnnotationContainer.AcceptVisitor(Sdl.Core.Bcm.BcmModel.Common.BcmVisitor)">
            <summary>
            Accepts a visitor of type <see cref="T:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor" />.
            </summary>
            <param name="visitor">The <see cref="T:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor" /> used to visit this item.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Annotations.TerminologyAnnotationContainer.Equals(Sdl.Core.Bcm.BcmModel.MarkupData)">
            <summary>
              <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData" /> based equality.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Annotations.TerminologyAnnotationContainer.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Annotations.TerminologyAnnotationContainer.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Collections.DictionaryEx`2">
            <summary>
            A dictionary with support for:
            - deep Equals (instead of ref comparison)
            - deep GetHashCode (2 refs with the same values will return the same hash code). The default dictionary returns hash code based on reference.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.DictionaryEx`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Collections.DictionaryEx`2"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.DictionaryEx`2.#ctor(Sdl.Core.Bcm.BcmModel.Collections.DictionaryEx{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Collections.DictionaryEx`2"/> class, based on another instance.
            </summary>
            <param name="other">The other instance from which to construct the current instance.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.DictionaryEx`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Collections.DictionaryEx`2"/> class.
            </summary>
            <param name="items">The items.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.DictionaryEx`2.Equals(Sdl.Core.Bcm.BcmModel.Collections.DictionaryEx{`0,`1})">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.DictionaryEx`2.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.DictionaryEx`2.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Collections.FileCollection">
            <summary>
            A dictionary-based collection of <see cref="T:Sdl.Core.Bcm.BcmModel.File"/>s.    
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.FileCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Collections.FileCollection"/> class.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Collections.FileCollection.IdGenerator">
            <summary>
            The identifier generator.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.FileCollection.InsertItem(System.Int32,Sdl.Core.Bcm.BcmModel.File)">
            <summary>
            Inserts an element into the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.FileCollection.SetItem(System.Int32,Sdl.Core.Bcm.BcmModel.File)">
            <summary>
            Replaces the item at the specified index with the specified item.
            </summary>
            <param name="index">The zero-based index of the item to be replaced.</param>
            <param name="item">The new item.</param>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2">
            <summary>
            A dictionary which uses hashes generated from the key to store items in a backing dictionary. We may look at generating
             long hashes eventually if there are many collisions detected.
            </summary>
            <typeparam name="TKey">Item from which key will be derived. At the moment, GetHashCode is called on the key to use as actual key in backing Dictionary</typeparam>
            <typeparam name="TValue">value for given key being stored in dictionary</typeparam>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2._backingDictionary">
            <summary>
            The backing dictionary.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Add(`0,`1)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.InvalidOperationException">Item with same key already exists in collection</exception>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.ContainsKey(`0)">
            <summary>
            Determines whether the collection contains the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>
              <c>true</c> if the collection contains the specified key; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.InvalidOperationException">Multiple matches found in collection</exception>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Item(`0)">
            <summary>
            Gets the <typeparamref name="TKey"/> with the specified key.
            </summary>
            <value>
            The <typeparamref name="TValue"/>.
            </value>
            <param name="key">The key.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">
            Multiple matches found in collection
            or
            Key not found in collection
            </exception>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Clear">
            <summary>
            Removes all keys and values from this instance.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Remove(`0)">
            <summary>
            Removes the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">Multiple matches found in collection</exception>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.TryGetValue(`0,`1@)">
            <summary>
            Tries to get a value by key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.GetHashCodeInternal(`0)">
            <summary>
            Gets the internal hash code used in the backing dictionary.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Collections.KeyBasedCollection`2">
            <summary>
            A <see cref="T:Sdl.Core.Bcm.BcmModel.Collections.KeyBasedCollection`2"/> implementation with support for deep equality.
            </summary>
            <typeparam name="TKey">The key.</typeparam>
            <typeparam name="TValue">The value.</typeparam>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Collections.KeyBasedCollection`2.KeySelector">
            <summary>
            The key selector.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.KeyBasedCollection`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Collections.KeyBasedCollection`2"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.KeyBasedCollection`2.#ctor(System.Func{`1,`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Collections.KeyBasedCollection`2"/> class.
            </summary>
            <param name="keySelector">The key selector.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.KeyBasedCollection`2.ForEach(System.Action{`1})">
            <summary>
            Executes an action over each element of the collection.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.KeyBasedCollection`2.Equals(Sdl.Core.Bcm.BcmModel.Collections.KeyBasedCollection{`0,`1})">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.KeyBasedCollection`2.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.KeyBasedCollection`2.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.KeyBasedCollection`2.GetKeyForItem(`1)">
            <summary>
            When implemented in a derived class, extracts the key from the specified element.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>
            The key for the specified element.
            </returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Collections.ParagraphUnitCollection">
            <summary>
            A <see cref="T:Sdl.Core.Bcm.BcmModel.Collections.KeyBasedCollection`2"/> of <see cref="T:Sdl.Core.Bcm.BcmModel.ParagraphUnit"/>s.
            Adds support for setting the parent elements and additonal helper properties.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.ParagraphUnitCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Collections.ParagraphUnitCollection"/> class.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Collections.ParagraphUnitCollection.ParentFile">
            <summary>
            Gets or sets the parent file.
            </summary>
            <value>
            The parent file.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.ParagraphUnitCollection.InsertItem(System.Int32,Sdl.Core.Bcm.BcmModel.ParagraphUnit)">
            <summary>
            Inserts an element into the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert.</param>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Collections.ParagraphUnitCollection.AllSegmentPairs">
            <summary>
            Gets all segment pairs.
            </summary>
            <value>
            All segment pairs.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Collections.ParagraphUnitCollection.SegmentCount">
            <summary>
            Gets the segment count.
            </summary>
            <value>
            The segment count.
            </value>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Collections.SegmentPairCollection">
            <summary>
            A collection of <see cref="T:Sdl.Core.Bcm.BcmModel.SegmentPair"/>s.
            Adds support for indexing by segment number.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.SegmentPairCollection.#ctor(System.Collections.Generic.IEnumerable{Sdl.Core.Bcm.BcmModel.SegmentPair})">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Collections.SegmentPairCollection"/> class.
            </summary>
            <param name="enumerable">The enumerable.</param>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Collections.SegmentPairCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Sdl.Core.Bcm.BcmModel.SegmentPair"/> with the specified segment number.
            </summary>
            <value>
            The <see cref="T:Sdl.Core.Bcm.BcmModel.SegmentPair"/>.
            </value>
            <param name="segmentNumber">The segment number.</param>
            <returns></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Collections.SegmentPairCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Common.BcmConst">
            <summary>
            Public constants.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Common.BcmConst.CurrentBcmModelVersion">
            <summary>
            The current BCM model version.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Common.BcmConst.FrameworkOriginalTagId">
            <summary>
            Metadata key for storing the original tag ID, populated by the SDL Filter Framework.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Common.BcmConst.FrameworkOriginalParagraphUnitId">
            <summary>
            Metadata key for storing the original <see cref="T:Sdl.Core.Bcm.BcmModel.ParagraphUnit"/> ID, populated by the SDL Filter Framework.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Common.BcmConst.KeepContextFromPreviousParagraph">
            <summary>
            Metadata used for conversion from BCM back to native format.
            If this metadata is <code>True</code>, the same contexts are used. If <code>False</code>, new contexts are created from the BCM contexts.
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor">
            <summary>
            An abstract class using the Visitor pattern.
            Can be implemented for concrete processing of BCM documents.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor.VisitStructure(Sdl.Core.Bcm.BcmModel.StructureTag)">
            <summary>
            Visits a <see cref="T:Sdl.Core.Bcm.BcmModel.StructureTag"/> instance.
            </summary>
            <param name="structureTag">The structure tag.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor.VisitTagPair(Sdl.Core.Bcm.BcmModel.TagPair)">
            <summary>
            Visits a <see cref="T:Sdl.Core.Bcm.BcmModel.StructureTag"/> instance.
            </summary>
            <param name="tagPair"></param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor.VisitPlaceholderTag(Sdl.Core.Bcm.BcmModel.PlaceholderTag)">
            <summary>
            Visits a <see cref="T:Sdl.Core.Bcm.BcmModel.PlaceholderTag"/> instance.
            </summary>
            <param name="tag"></param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor.VisitText(Sdl.Core.Bcm.BcmModel.TextMarkup)">
            <summary>
            Visits a <see cref="T:Sdl.Core.Bcm.BcmModel.TextMarkup"/> instance.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor.VisitSegment(Sdl.Core.Bcm.BcmModel.Segment)">
            <summary>
            Visits a <see cref="T:Sdl.Core.Bcm.BcmModel.Segment"/> instance.
            </summary>
            <param name="segment"></param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor.VisitCommentContainer(Sdl.Core.Bcm.BcmModel.Annotations.CommentContainer)">
            <summary>
            Visits a <see cref="T:Sdl.Core.Bcm.BcmModel.Annotations.CommentContainer"/> instance.
            </summary>
            <param name="commentContainer"></param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor.VisitLockedContentContainer(Sdl.Core.Bcm.BcmModel.LockedContentContainer)">
            <summary>
            Visits a <see cref="T:Sdl.Core.Bcm.BcmModel.LockedContentContainer"/> instance.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor.VisitRevisionContainer(Sdl.Core.Bcm.BcmModel.RevisionContainer)">
            <summary>
            Visits a <see cref="T:Sdl.Core.Bcm.BcmModel.RevisionContainer"/> instance.
            </summary>
            <param name="revisionContainer"></param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor.VisitFeedbackContainer(Sdl.Core.Bcm.BcmModel.FeedbackContainer)">
            <summary>
            Visits a <see cref="T:Sdl.Core.Bcm.BcmModel.FeedbackContainer"/> instance.
            </summary>
            <param name="feedbackContainer"></param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor.VisitParagraph(Sdl.Core.Bcm.BcmModel.Paragraph)">
            <summary>
            Visits a <see cref="T:Sdl.Core.Bcm.BcmModel.Paragraph"/> instance.
            </summary>
            <param name="paragraph"></param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor.VisitTerminologyContainer(Sdl.Core.Bcm.BcmModel.Annotations.TerminologyAnnotationContainer)">
            <summary>
            Visits a <see cref="T:Sdl.Core.Bcm.BcmModel.Annotations.TerminologyAnnotationContainer"/> instance.
            </summary>
            <param name="terminologyAnnotation"></param>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Common.DefaultTranslationOrigin">
            <summary>
            This class holds the constants that represent the suggested
                        default values to use for the <see cref="P:TSdl.Core.Bcm.BcmModel.TranslationOrigin.OriginType"/> attribute.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Common.DefaultTranslationOrigin.Interactive">
            <summary>
            The segment has been manually adapted or translated from scratch.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Common.DefaultTranslationOrigin.DocumentMatch">
            <summary>
            Batch translation by applying a Context TM type tool like PerfectMatch(tm)
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Common.DefaultTranslationOrigin.MachineTranslation">
            <summary>
            Machine translated content
            
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Common.DefaultTranslationOrigin.TranslationMemory">
            <summary>
            Batch pre-translation using a fuzzy or 100% match
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Common.DefaultTranslationOrigin.NotTranslated">
            <summary>
            The segment has not yet been translated. This is usually an empty segment.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Common.DefaultTranslationOrigin.AutoPropagated">
            <summary>
            The segment has been translated using AutoPropagation from internal matches.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Common.DefaultTranslationOrigin.Source">
            <summary>
            The segment has been translated by copying the source to the target.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Common.DefaultTranslationOrigin.AutomatedAlignment">
            <summary>
            The translated segment was created by an automated linguistic alignment of previously
                        translated source and target content.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Common.DefaultTranslationOrigin.Unknown">
            <summary>
            The segment was translated by an unknown tool - usually from a third party provider.
            
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Common.DefaultTranslationOrigin.ReverseAlignment">
            <summary>
            The segment was updated by ReverseAlignment process.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Common.DefaultTranslationOrigin.AdaptiveMachineTranslation">
            <summary>
            Adaptive machine translated content
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Common.DefaultTranslationOrigin.NeuralMachineTranslation">
            <summary>
            Adaptive machine translated content
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Common.DefaultTranslationOrigin.AutomaticTranslation">
            <summary>
            Adaptive machine translated content
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Common.ICloneable`1">
            <summary>
            Typed ICloneable interface.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Common.ICloneable`1.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Common.ModelExtensions">
            <summary>
            Extension methods.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Common.ModelExtensions.IsSequenceEqual``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0})">
            <summary>
            Performs a deep comparison between two <see cref="T:System.Collections.Generic.IList`1"/>
            </summary>
            <typeparam name="TSource">The collection element type.</typeparam>
            <param name="first">The first collection.</param>
            <param name="second">The second collection.</param>
            <returns>True if the collections are deeply equal. Otherwise false.</returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.ConfirmationLevel">
            <summary>
            Different stages of translation and translation approval for a <see cref="T:Sdl.Core.Bcm.BcmModel.Segment"/>.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.ConfirmationLevel.NotTranslated">
            <summary>Untranslated content.</summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.ConfirmationLevel.Draft">
            <summary>
            Draft (edited) content.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.ConfirmationLevel.Translated">
            <summary>
            Translated content.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.ConfirmationLevel.RejectedTranslation">
            <summary>
            Translated content marked as Rejected.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.ConfirmationLevel.ApprovedTranslation">
            <summary>
            Translated content marked as Approved.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.ConfirmationLevel.RejectedSignOff">
            <summary>
            Translated content Rejected at Sign-off.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.ConfirmationLevel.ApprovedSignOff">
            <summary>
            Translated content Approved at Sign-off.
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.DependencyFile">
            <summary>
            Files marked as dependencies for the BCM content.
            Used for conversion from and to native formats.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.DependencyFile.Id">
            <summary>
            The <see cref="T:Sdl.Core.Bcm.BcmModel.DependencyFile"/> Id.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.DependencyFile.FileId">
            <summary>
            The id of the given file in the BCM document.
            This is used for multi-file sections in the BCM document and for matching the dependency section to the given file section in the BCM document
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.DependencyFile.Usage">
            <summary>
            Gets or sets the purpose of the dependency file.
            </summary>
            <value>
            The purpose of the dependency file.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.DependencyFile.Location">
            <summary>
            Gets or sets the file location.
            </summary>
            <value>
            The file location.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.DependencyFile.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>
            The name of the file.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.DependencyFile.Provider">
            <summary>
            Gets or sets the system providing the file.
            </summary>
            <value>
            The system providing the file.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.DependencyFile.EmbeddedContent">
            <summary>
            Gets or sets the embedded content.
            </summary>
            <value>
            The embedded content.
            </value>
            <remarks>In the cases where the dependency file is stored inline, this will contain the B64-encoded ZIP archive of the dependency file</remarks>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.DependencyFile.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.DependencyFile.Equals(Sdl.Core.Bcm.BcmModel.DependencyFile)">
            <summary>
            Performs a deep-equals comparison. 
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.DependencyFile.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.DependencyFile.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.DependencyFileUsage">
            <summary>
            Defines the purpose of a <see cref="T:Sdl.Core.Bcm.BcmModel.DependencyFile"/>.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.DependencyFileUsage.None">
            <summary>
            Unknown or not specified.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.DependencyFileUsage.Extraction">
            <summary>
            Used during the extraction phase.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.DependencyFileUsage.Generation">
            <summary>
             Used during the generate phase.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.DependencyFileUsage.Final">
            <summary>
            Used or required for correct operation of the final (localized) file.
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Document">
            <summary>
            The BCM root element.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Document.Id">
            <summary>
            The document ID. Uniquely identifies a BCM document.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Document.ModelVersion">
            <summary>
            The semantic version of the BCM used for creating this document.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Document.Name">
            <summary>
            The BCM document name.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Document.SourceLanguageCode">
            <summary>
            The source language code.
            </summary>
            <example>"en-GB"</example>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Document.TargetLanguageCode">
            <summary>
            The source language code.
            </summary>
            <example>"de-DE"</example>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Document.SourceLanguageName">
            <summary>
            Gets or sets the source language display name.
            </summary>
            <value>
            The name of the source language.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Document.TargetLanguageName">
            <summary>
            Gets or sets the target language display name.
            </summary>
            <value>
            The name of the target language.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Document.Files">
            <summary>
            A collection of all the <see cref="T:Sdl.Core.Bcm.BcmModel.File"/>s in this document.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Document.#ctor">
            <summary>
            Public constructor.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Document.IdGenerator">
            <summary>
            Used for managing sequential numeric IDs of different elements.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Document.Clone">
            <summary>
            Deep-clones a <see cref="T:Sdl.Core.Bcm.BcmModel.Document"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Document.Equals(Sdl.Core.Bcm.BcmModel.Document)">
            <summary>
            Performs a deep-equals comparison.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Document.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Document.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.ExtensionDataContainer">
            <summary>
            A <see cref="T:Newtonsoft.Json.JsonExtensionDataAttribute"/> object used as base for elements that need to preserve unrecognized data on deserialization.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.ExtensionDataContainer.ExtensionData">
            <summary>
            Preserves any unrecognized data upon deserialization from JSON.
            This data is serialized in its original format.
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.FeedbackContainer">
            <summary>
            Holds feedback information created during the translation and review process.
            </summary>
            <remarks>Used by the Translation Quality Assessment process(TQA).</remarks>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.FeedbackContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.FeedbackContainer"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.FeedbackContainer.#ctor(Sdl.Core.Bcm.BcmModel.FeedbackType)">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.FeedbackContainer"/> class.
            </summary>
            <param name="feedbackType">Type of the feedback.</param>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.FeedbackContainer.Author">
            <summary>
            Gets or sets the author.
            </summary>
            <value>
            The author.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.FeedbackContainer.Timestamp">
            <summary>
            Gets or sets the creation date.
            </summary>
            <value>
            The creation date.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.FeedbackContainer.Category">
            <summary>
            Gets or sets the custom category of this feedback.
            </summary>
            <value>
            The category.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.FeedbackContainer.DocumentCategory">
            <summary>
            Gets or sets the document category.
            </summary>
            <value>
            The document category.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.FeedbackContainer.Severity">
            <summary>
            Gets or sets the custom severity.
            </summary>
            <value>
            The custom severity.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.FeedbackContainer.CommentDefinitionId">
            <summary>
            <para>OBSOLETE</para>
            Gets or sets the comment definition identifier.        
            </summary>
            <value>
            The comment definition identifier.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.FeedbackContainer.FeedbackType">
            <summary>
            Gets or sets the type of the feedback.
            </summary>
            <value>
            The type of the feedback.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.FeedbackContainer.ReplacementId">
            <summary>
            Gets or sets the replacement identifier.
            </summary>
            <value>
            The replacement identifier.
            </value>
            <remarks>
            Id which is used for identifying TQA replacements (replacing an existing piece of markup with new markup).
            Both original and new markup (adjacent FeedbackDeleted and FeedbackAdded markers) will contain 
            an identical ReplacementId GUID in their properties indicating it is a replacement.
            </remarks>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.FeedbackContainer.Comment">
            <summary>
            Gets or sets the comment on this review feedback.
            </summary>
            <value>
            The comment.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.FeedbackContainer.Origin">
            <summary>
            Gets or sets the feedback origin.
            Example values: "auto-filled", "auto-categorized", "interactive"
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.FeedbackContainer.Type">
            <summary>
            Gets or sets the custom feedback type.
            </summary>
            <value>
            The feedback type.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.FeedbackContainer.AcceptVisitor(Sdl.Core.Bcm.BcmModel.Common.BcmVisitor)">
            <summary>
            Accepts a visitor of type <see cref="T:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor" />.
            </summary>
            <param name="visitor">The <see cref="T:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor" /> used to visit this item.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.FeedbackContainer.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A deep clone of this instance.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.FeedbackContainer.UniqueClone">
            <summary>
            Clones this instance with a new unique ID.
            </summary>
            <returns>A deep clone with a new unique ID.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.FeedbackContainer.Equals(Sdl.Core.Bcm.BcmModel.MarkupData)">
            <summary>
            Performs a deep equals comparison.
            </summary>
            <param name="other">The other <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/> used for comparison..</param>
            <returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.FeedbackContainer.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.FeedbackContainer.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.FeedbackType">
            <summary>
            Types of feedback changes created during the translation/review process.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.FeedbackType.Added">
            <summary>
            Added content.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.FeedbackType.Deleted">
            <summary>
            Deleted content.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.FeedbackType.Comment">
            <summary>
            A feedback comment was added.
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.File">
            <summary>
            BCM data extracted from a native file.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.File.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.File.OriginalEncoding">
            <summary>
            Gets or sets the original encoding.
            </summary>
            <value>
            The original encoding.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.File.PreferredTargetEncoding">
            <summary>
            Gets or sets the preferred target encoding.
            </summary>
            <value>
            The preferred target encoding.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.File.OriginalFileName">
            <summary>
            The name of the native file from which this <see cref="T:Sdl.Core.Bcm.BcmModel.File"/> was constructed.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.File.FileTypeDefinitionId">
            <summary>
            The ID of the filter used for converting the file from native format.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.File.DependencyFiles">
            <summary>
            Dependency files used for converting to and from native format.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.File.CommentDefinitionIds">
            <summary>
            IDs of <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.CommentDefinition"/> used as file-level comments.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.File.Skeleton">
            <summary>
            The <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton"/> holding all the structure element data referenced in this <see cref="T:Sdl.Core.Bcm.BcmModel.File"/>.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.File.ParagraphUnits">
            <summary>
            A collection of all the <see cref="T:Sdl.Core.Bcm.BcmModel.ParagraphUnit"/> elements in this <see cref="T:Sdl.Core.Bcm.BcmModel.File"/>.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.File.#ctor">
            <summary>
            Public constructor.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.File.Parent">
            <summary>
            The parent <see cref="T:Sdl.Core.Bcm.BcmModel.Document"/> of this <see cref="T:Sdl.Core.Bcm.BcmModel.File"/>.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.File.IdGenerator">
            <summary>
            Gets or sets the <see cref="P:Sdl.Core.Bcm.BcmModel.File.IdGenerator"/> used for generating sequential IDs./>
            </summary>
            <value>
            The identifier generator.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.File.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A deep clone of this instance.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.File.Equals(Sdl.Core.Bcm.BcmModel.File)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.File.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.File.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.File.ShouldSerializeCommentDefinitionIds">
            <summary>
            Used by JSON.NET serializer.
            </summary>
            <returns>True if the <see cref="P:Sdl.Core.Bcm.BcmModel.File.CommentDefinitionIds"/> property should be serialized. </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.File.ShouldSerializeDependencyFiles">
            <summary>
            Used by JSON.NET serializer.
            </summary>
            <returns>True if the <see cref="P:Sdl.Core.Bcm.BcmModel.File.DependencyFiles"/> property should be serialized. </returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.FileMetaDataKeys">
            <summary>
            Constants used for <see cref="T:Sdl.Core.Bcm.BcmModel.File"/> metadata.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.FileMetaDataKeys.ContextFileLocation">
            <summary>
            <see cref="T:Sdl.Core.Bcm.BcmModel.File"/> level metadata containing the context file location.
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Fragment">
            <summary>
            Class representing an independent fragment (slice) of a BCM <see cref="T:Sdl.Core.Bcm.BcmModel.Document"/>.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Fragment.SourceLanguageCode">
            <summary>
            Gets or sets the source language code.
            </summary>
            <value>
            The source language code.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Fragment.TargetLanguageCode">
            <summary>
            Gets or sets the target language code.
            </summary>
            <value>
            The target language code.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Fragment.DocumentId">
            <summary>
            Gets or sets the document identifier.
            </summary>
            <value>
            The document identifier which uniquely identifies this BCM <see cref="T:Sdl.Core.Bcm.BcmModel.Fragment"/>.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Fragment.Skeleton">
            <summary>
            Gets or sets the <see cref="T:Sdl.Core.Bcm.BcmModel.File"/> skeleton.
            </summary>
            <value>
            The file skeleton.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Fragment.SourceContent">
            <summary>
            Gets or sets the source content of the BCM fragment.
            </summary>
            <value>
            The source content of the Fragment.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Fragment.TargetContent">
            <summary>
            Gets or sets the target content of the BCM fragment.
            </summary>
            <value>
            The target content of the BCM fragment.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Fragment.Index">
            <summary>
            The index in the source <see cref="T:Sdl.Core.Bcm.BcmModel.Document"/> from where this fragment was extracted.
            </summary>
            <value>
            The index in the source <see cref="T:Sdl.Core.Bcm.BcmModel.Document"/> from where this fragment was extracted.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Fragment.StructureContextId">
            <summary>
            Gets or sets the structure <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.Context"/> associated with this fragment.
            </summary>
            <value>
            The structure <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.Context"/> associated with this fragment.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Fragment.ContextList">
            <summary>
            Gets or sets the list of <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.Context"/> IDs associated with this fragment.
            </summary>
            <value>
            The list of <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.Context"/> IDs associated with this fragment..
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Fragment.CommentDefinitionIds">
            <summary>
            Gets or sets the list of <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.CommentDefinition"/> IDs associated with this fragment.
            </summary>
            <value>
            The list of <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.CommentDefinition"/> IDs associated with this fragment.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Fragment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Fragment"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Fragment.ShouldSerializeSkeleton">
            <summary>
            Used by JSON.NET serialization.
            </summary>
            <returns><c>True</c> if the <see cref="P:Sdl.Core.Bcm.BcmModel.Fragment.Skeleton"/> should be serialized; otherwise <c>False</c></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Fragment.ShouldSerializeContextList">
            <summary>
            Used by JSON.NET serialization.
            </summary>
            <returns><c>True</c> if the <see cref="P:Sdl.Core.Bcm.BcmModel.Fragment.ContextList"/> should be serialized; otherwise <c>False</c></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Fragment.ShouldSerializeCommentDefinitionIds">
            <summary>
            Used by JSON.NET serialization.
            </summary>
            <returns><c>True</c> if the <see cref="P:Sdl.Core.Bcm.BcmModel.Fragment.CommentDefinitionIds"/> should be serialized; otherwise <c>False</c></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Fragment.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A deep clone of this instance.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Fragment.Equals(Sdl.Core.Bcm.BcmModel.Fragment)">
            <summary>
            Performs a deep-equals comparison.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Fragment.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Fragment.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Fragment.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.ISkeletonItemReference`1">
            <summary>
            Marks a class as having its definition in the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton"/>.
            </summary>
            <typeparam name="T">Type parameter. Should be an item from the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton"/>.</typeparam>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.ISkeletonItemReference`1.Definition">
            <summary>
            Gets the definition of this item from the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton"/>.
            </summary>
            <value>
            The definition of this item from the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton"/>.
            </value>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.LocalizableSubContent">
            <summary>
            Subcontent of a particular BCM content element.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.LocalizableSubContent.SourceTagContentOffset">
            <summary>
            Gets or sets the offset in the source tag from which the content was extracted.
            </summary>
            <value>
            The offset in the source tag from which the content was extracted. 
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.LocalizableSubContent.Length">
            <summary>
            Gets or sets the content length.
            </summary>
            <value>
            The content length.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.LocalizableSubContent.ParagraphUnitId">
            <summary>
            Gets or sets the <see cref="T:Sdl.Core.Bcm.BcmModel.ParagraphUnit"/> Id holding the content marked by this <see cref="T:Sdl.Core.Bcm.BcmModel.LocalizableSubContent"/> reference.
            </summary>
            <value>
            The <see cref="T:Sdl.Core.Bcm.BcmModel.ParagraphUnit"/> Id holding the content marked by this <see cref="T:Sdl.Core.Bcm.BcmModel.LocalizableSubContent"/> reference.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.LocalizableSubContent.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A deep clone of this instance.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.LocalizableSubContent.Equals(Sdl.Core.Bcm.BcmModel.LocalizableSubContent)">
            <summary>
            Performs a deep-equals comparison.
            </summary>
            <param name="other">The other item used for comparison.</param>
            <returns><c>True</c> if the items are deeply equal; <c>False</c> otherwise.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.LocalizableSubContent.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.LocalizableSubContent.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.LockedContentContainer">
            <summary>
            Marks content that is locked for editing.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.LockedContentContainer.Type">
            <summary>
            Gets the type of <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/>.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.LockedContentContainer.AcceptVisitor(Sdl.Core.Bcm.BcmModel.Common.BcmVisitor)">
            <summary>
            Accepts a visitor of type <see cref="T:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor" />.
            </summary>
            <param name="visitor">The <see cref="T:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor" /> used to visit this item.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.LockedContentContainer.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A deep clone of this instance.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.LockedContentContainer.UniqueClone">
            <summary>
            Clones this instance, setting a new unique Id.
            </summary>
            <returns>A deep clone of this instance, with a new unique Id.</returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.MarkupData">
            <summary>
            Abstract entity representing an item that can be included inside a <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupDataContainer"/>.
            Examples: <seealso cref="T:Sdl.Core.Bcm.BcmModel.TextMarkup"/>, <seealso cref="T:Sdl.Core.Bcm.BcmModel.PlaceholderTag"/>, <seealso cref="T:Sdl.Core.Bcm.BcmModel.TagPair"/>.
            </summary>
            <remarks>Inheritors of MarkupData should not implement themselves <see cref="T:System.IEquatable`1"/>, but should override <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/> equality.</remarks>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.MarkupData.Id">
            <summary>
            Markup data unique id (GUID).
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.MarkupData.Type">
            <summary>
            Gets or sets the type. Should be implement in derived classes to uniquely identify the type of <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/> on deserialization.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupData.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/> class.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/> class.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.MarkupData.Parent">
            <summary>
            The <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupDataContainer"/> parent container.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.MarkupData.ParentFragment">
            <summary>
            The <see cref="T:Sdl.Core.Bcm.BcmModel.Fragment"/> containing this item.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.MarkupData.ParentParagraph">
            <summary>
            The <see cref="T:Sdl.Core.Bcm.BcmModel.Paragraph"/> containing this item.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.MarkupData.ParentParagraphUnit">
            <summary>
            The <see cref="T:Sdl.Core.Bcm.BcmModel.ParagraphUnit"/> containing this item.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.MarkupData.Ancestors">
            <summary>
            This item's <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupDataContainer"/> ancestors, in ascending order.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.MarkupData.ParentSegment">
            <summary>
            The <see cref="T:Sdl.Core.Bcm.BcmModel.Segment"/> containing this item. 
            Null if the item isn't inside of a Segment.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.MarkupData.IsContainer">
            <summary>
            True if this <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/> is a container. Otherwise false.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.MarkupData.IndexInParent">
            <summary>
            The index of this item in the parent <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupDataContainer"/>.
            -1 if it doesn't have a parent.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupData.AcceptVisitor(Sdl.Core.Bcm.BcmModel.Common.BcmVisitor)">
            <summary>
            Accepts a visitor of type <see cref="T:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor"/>.
            </summary>
            <param name="visitor">The <see cref="T:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor"/> used to visit this item.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupData.Clone">
            <summary>
            Clones the item to a new <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupData.Equals(Sdl.Core.Bcm.BcmModel.MarkupData)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupData.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupData.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupData.UniqueClone">
            <summary>
            Creates clone of the current object, with a new unique Id.
            </summary>
            <returns>A clone with a new unique Id.</returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.MarkupDataContainer">
            <summary>
            A <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/> element that can hold other <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/> elements.
            </summary>
            <seealso cref="T:Sdl.Core.Bcm.BcmModel.MarkupData" />
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.AutoClonedTagPairKey">
            <summary>
            Metadata key, marking thi instance as cloned (duplicated) during conversion from native formats.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupDataContainer"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupDataContainer" /> class.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.Children">
            <summary>
            The container's direct children.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.AllSubItems">
            <summary>
            All the <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/> items in the subtree, in depth-first order.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.GetAllChildren(System.Func{Sdl.Core.Bcm.BcmModel.MarkupData,System.Boolean})">
            <summary>
            Finds all the <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/> items in the subtree which satisfy a specific condition, in depth-first order.
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.GetAllChildren``1(System.Func{``0,System.Boolean})">
            <summary>
            Finds all the <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/> items in the subtree which satisfy a specific condition, in depth-first order.
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.Add(Sdl.Core.Bcm.BcmModel.MarkupData)">
            <summary>
            Adds a new <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/> to the container.
            </summary>
            <param name="markupData">The item to be added.</param>
            <returns>The container after the change.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.Add(System.Collections.Generic.IEnumerable{Sdl.Core.Bcm.BcmModel.MarkupData})">
            <summary>
            Adds a new <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/> to the container.
            </summary>
            <param name="range">The range of <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/> items to be added.</param>
            <returns>The container after the change.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.Insert(System.Int32,Sdl.Core.Bcm.BcmModel.MarkupData)">
            <summary>
            Inserts a new <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/> into the container.
            </summary>
            <param name="markupData">The item to be inserted.</param>
            <param name="index">The position where the item should be inserted.</param>
            <returns>The container after the change.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.Remove(Sdl.Core.Bcm.BcmModel.MarkupData)">
            <summary>
            Removes a <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/> item from the container.
            </summary>
            <param name="markupData">The item to be removed.</param>
            <returns>The container after the changes.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.Clear">
            <summary>
            Removes all the items from this container. 
            Sets the previous children Parent property to null.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.Count">
            <summary>
            Gets the number of children of this container.
            </summary>
            <value>
            The number of children of this container.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerator`1"/> for the container's children.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> instance enumerating the container's children.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.Clone">
            <summary>
            Clones the item to a new <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData" />.
            </summary>
            <returns>A deep clone of this instance.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.Equals(Sdl.Core.Bcm.BcmModel.MarkupData)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.MoveToContainer(Sdl.Core.Bcm.BcmModel.MarkupDataContainer,System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves the children of this container to another <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupDataContainer"/> instance.
            </summary>
            <param name="target">The target <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupDataContainer"/>.</param>
            <param name="sourceIndex">Index in the source container, from where to start moving elements.</param>
            <param name="targetIndex">Index in the target container, where the elements should be inserted.</param>
            <param name="count">Number of elements to be moved.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.Equals(Sdl.Core.Bcm.BcmModel.MarkupDataContainer)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.RemoveAt(System.Int32)">
            <summary>
            Removes a <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/> item from the container at a specific index.
            </summary>
            <param name="index">The index of the item to be removed.</param>
            <returns>The container after the changes.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.Reset">
            <summary>
            Creates a new list of children, used by cloning,
            </summary>        
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.UniqueClone">
            <summary>
            Creates clone of the current object, with a new unique Id.
            </summary>
            <returns>
            A clone with a new unique Id.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MarkupDataContainer.CloneWithoutChildren">
            <summary>
            Creates a clone of this instance, without any children elements.
            </summary>
            <returns>A clone of this instance, without any children elements.</returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.MetadataContainer">
            <summary>
            An object that contains metadata in the form of a <see cref="T:Sdl.Core.Bcm.BcmModel.Collections.DictionaryEx`2"/>.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.MetadataContainer.Metadata">
            <summary>
            Gets or sets the metadata.
            </summary>
            <value>
            The metadata.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MetadataContainer.GetMetadata(System.String)">
            <summary>
            Gets the metadata.
            </summary>
            <param name="key">The metadata key.</param>
            <returns>The metadata value; or <c>null</c> if the key was not found.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MetadataContainer.SetMetadata(System.String,System.String)">
            <summary>
            Sets a metadata value.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MetadataContainer.Equals(Sdl.Core.Bcm.BcmModel.MetadataContainer)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MetadataContainer.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MetadataContainer.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.MetadataContainer.ShouldSerialize_metadata">
            <summary>
            Needed for JSON serialization.
            </summary>
            <returns><c>True</c> if this instance should be serialized; otherwise <c>False</c>.</returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Paragraph">
            <summary>
            A <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupDataContainer"/> containing the source or target content of a <see cref="T:Sdl.Core.Bcm.BcmModel.ParagraphUnit"/>.
            </summary>
            <seealso cref="T:Sdl.Core.Bcm.BcmModel.MarkupDataContainer" />
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Paragraph.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Paragraph"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Paragraph.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Paragraph"/> class.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Paragraph.#ctor(Sdl.Core.Bcm.BcmModel.Segment)">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Paragraph"/> class with a particular child <see cref="T:Sdl.Core.Bcm.BcmModel.Segment"/>.
            </summary>
            <param name="segment">The <see cref="T:Sdl.Core.Bcm.BcmModel.Segment"/> to be added as a child to this instance.</param>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Paragraph.ParentParagraphUnit">
            <summary>
            The <see cref="T:Sdl.Core.Bcm.BcmModel.ParagraphUnit" /> containing this item.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Paragraph.Type">
            <summary>
            Gets the type of <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/>.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Paragraph.AcceptVisitor(Sdl.Core.Bcm.BcmModel.Common.BcmVisitor)">
            <summary>
            Accepts a visitor of type <see cref="T:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor" />.
            </summary>
            <param name="visitor">The <see cref="T:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor" /> used to visit this item.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Paragraph.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A deep clone of this instance.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Paragraph.UniqueClone">
            <summary>
            Clones this instance, assigning a new unique Id.
            </summary>
            <returns>A deep clone of this instance, with a new unique Id.</returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.ParagraphUnit">
            <summary>
            The main element of translatable content. Contains a source and target <see cref="T:Sdl.Core.Bcm.BcmModel.Paragraph"/> element.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.ParagraphUnit.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.ParagraphUnit.ParentFileId">
            <summary>
            Gets or sets the parent <see cref="T:Sdl.Core.Bcm.BcmModel.File"/> identifier.
            </summary>
            <value>
            The parent <see cref="T:Sdl.Core.Bcm.BcmModel.File"/> identifier.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.ParagraphUnit.IsStructure">
            <summary>
            Gets or sets a value indicating whether this instance is a structure <see cref="T:Sdl.Core.Bcm.BcmModel.ParagraphUnit"/>.
            </summary>
            <value>
              <c>true</c> if this instance is a structure <see cref="T:Sdl.Core.Bcm.BcmModel.ParagraphUnit"/>; otherwise, <c>false</c>.
            </value>
            <remarks>A structure <see cref="T:Sdl.Core.Bcm.BcmModel.ParagraphUnit"/> is not usually used as translatable content.</remarks>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.ParagraphUnit.IsLocked">
            <summary>
            Gets or sets a value indicating whether this instance is locked.
            </summary>
            <value>
              <c>true</c> if this instance is locked; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.ParagraphUnit.StructureContextId">
            <summary>
            Gets or sets the id of the structure <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.Context"/>.
            </summary>
            <value>
            The id of the structure <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.Context"/>.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.ParagraphUnit.ContextList">
            <summary>
            Gets or sets the list of <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.Context"/> IDs associated with this instance.
            </summary>
            <value>
            The list of <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.Context"/> IDs associated with this instance.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.ParagraphUnit.Index">
            <summary>
            Gets or sets the index of this instance in the <see cref="P:Sdl.Core.Bcm.BcmModel.ParagraphUnit.ParentFile"/>.
            </summary>
            <value>
            The index of this instance in the <see cref="P:Sdl.Core.Bcm.BcmModel.ParagraphUnit.ParentFile"/>.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.ParagraphUnit.Source">
            <summary>
            Gets or sets the source <see cref="T:Sdl.Core.Bcm.BcmModel.Paragraph"/>.
            </summary>
            <value>
            The source <see cref="T:Sdl.Core.Bcm.BcmModel.Paragraph"/>.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.ParagraphUnit.Target">
            <summary>
            Gets or sets the target <see cref="T:Sdl.Core.Bcm.BcmModel.Paragraph"/>.
            </summary>
            <value>
            The target <see cref="T:Sdl.Core.Bcm.BcmModel.Paragraph"/>.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.ParagraphUnit.CommentDefinitionIds">
            <summary>
            Gets or sets the list of <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.CommentDefinition"/> IDs.
            </summary>
            <value>
            The list of <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.CommentDefinition"/> IDs.
            </value>
            <remarks>This holds any <see cref="T:Sdl.Core.Bcm.BcmModel.ParagraphUnit"/> level comments.</remarks>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.ParagraphUnit.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.ParagraphUnit"/> class.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.ParagraphUnit.ParentFile">
            <summary>
            Gets or sets the parent <see cref="T:Sdl.Core.Bcm.BcmModel.File"/>.
            </summary>
            <value>
            The parent <see cref="T:Sdl.Core.Bcm.BcmModel.File"/>.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.ParagraphUnit.SegmentPairs">
            <summary>
            Gets all the source and target <see cref="T:Sdl.Core.Bcm.BcmModel.Segment"/> in this instance, paired as <see cref="T:Sdl.Core.Bcm.BcmModel.SegmentPair"/> elements.
            </summary>
            <value>
            The segment pairs.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.ParagraphUnit.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A deep clone of this instance.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.ParagraphUnit.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.ParagraphUnit.Equals(Sdl.Core.Bcm.BcmModel.ParagraphUnit)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.ParagraphUnit.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.ParagraphUnit.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.ParagraphUnitMetadataKeys">
            <summary>
            Constants with <see cref="T:Sdl.Core.Bcm.BcmModel.ParagraphUnit"/> related metadata keys.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.ParagraphUnitMetadataKeys.FrameworkOriginalParagraphUnitId">
            <summary>
            The original paragraph unit identifier used by the SDL Filter Framework.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PartialSerialization.InMemory.InMemoryBcmSerializer.#ctor">
            <summary>
            New empty document
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.PartialSerialization.IPartialBcmSerializer">
            <summary>
            Bcm serialization interface that allows for not holding the whole bcm document in memory
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PartialSerialization.IPartialBcmSerializer.GetDocumentWithoutFiles">
            <summary>
            Gets document attributes and metadata without the files list.
            Updates made to the object returned will be reflected automatically
            in the result in case the updated bcm is requested.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PartialSerialization.IPartialBcmSerializer.GetFileCount">
            <summary>
            Number of files in this document
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PartialSerialization.IPartialBcmSerializer.GetFileIds">
            <summary>
            All file ids in this document
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PartialSerialization.IPartialBcmSerializer.GetFileSerializer(System.String)">
            <summary>
            Gets serialization wrapper for specific file
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PartialSerialization.IPartialBcmSerializer.AddFile(Sdl.Core.Bcm.BcmModel.File)">
            <summary>
            Adds a file, based on the attributes and skeleton in the parameter.
            Array of paragraph units must be empty.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PartialSerialization.IPartialBcmSerializer.InsertFile(System.Int32,Sdl.Core.Bcm.BcmModel.File)">
            <summary>
            Inserts a file to a specific position, based on the attributes and skeleton
            in the parameter. Array of paragraph units must be empty.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PartialSerialization.IPartialBcmSerializer.DeleteFile(System.Int32)">
            <summary>
            Deletes the file from the document.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PartialSerialization.IPartialBcmSerializer.DeleteFile(System.String)">
            <summary>
            Deletes the file from the document.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PartialSerialization.IPartialBcmSerializer.SaveAsJson(System.String)">
            <summary>
            Saves bcm document as single json object
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PartialSerialization.IPartialBcmSerializer.SaveAsJson(System.IO.Stream)">
            <summary>
            Saves bcm document as single json object
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.PartialSerialization.IPartialFileSerializer">
            <summary>
            Bcm file serialization interface that allows for not holding the full file in memory
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PartialSerialization.IPartialFileSerializer.GetFileWithoutParagraphUnits">
            <summary>
            Gets file attributes and skeleton without any paragraph units in it.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PartialSerialization.IPartialFileSerializer.UpdateFileDataWithoutParagraphUnits(Sdl.Core.Bcm.BcmModel.File)">
            <summary>
            Updates file attributes and skeleton. Array of paragraph units must be empty.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PartialSerialization.IPartialFileSerializer.GetParagraphUnitCount">
            <summary>
            Returns the number of paragraph units in this file
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PartialSerialization.IPartialFileSerializer.GetParagraphUnitIds">
            <summary>
            Returns the paragraph unit ids from this file
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PartialSerialization.IPartialFileSerializer.GetAllParagraphUnits">
            <summary>
            Returns a sequence of paragraph units from this file, deserialized one by one
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PartialSerialization.IPartialFileSerializer.GetSpecificParagraphUnit(System.Int32)">
            <summary>
            Deserializes the paragraph unit with specific index in file
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PartialSerialization.IPartialFileSerializer.GetSpecificParagraphUnit(System.String)">
            <summary>
            Deserializes the paragraph unit with specific id in file
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PartialSerialization.IPartialFileSerializer.UpdateParagraphUnit(Sdl.Core.Bcm.BcmModel.ParagraphUnit)">
            <summary>
            Updates paragraph unit in file
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PartialSerialization.IPartialFileSerializer.AddParagraphUnit(Sdl.Core.Bcm.BcmModel.ParagraphUnit)">
            <summary>
            Adds a paragraph unit at the end of the paragraph units list in the file
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PartialSerialization.IPartialFileSerializer.InsertParagraphUnit(System.Int32,Sdl.Core.Bcm.BcmModel.ParagraphUnit)">
            <summary>
            Inserts paragraph unit at specific index in file
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PartialSerialization.IPartialFileSerializer.RemoveParagraphUnit(System.Int32)">
            <summary>
            Removes paragraph unit with specific index from file
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PartialSerialization.IPartialFileSerializer.RemoveParagraphUnit(System.String)">
            <summary>
            Removes paragraph unit from file
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PartialSerialization.IPartialFileSerializer.RemoveParagraphUnitRange(System.Int32,System.Int32)">
            <summary>
            Removes multiple paragraph units based on index
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PartialSerialization.TempFileBased.TempFileBasedBcmSerializer.#ctor">
            <summary>
            Creates new empty document.
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.PlaceholderTag">
            <summary>
            A tag with no translatable content.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.PlaceholderTag.PlaceholderTagDefinitionId">
            <summary>
            Gets or sets the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.PlaceholderTagDefinition"/> id.
            </summary>
            <value>
            The <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.PlaceholderTagDefinition"/> id.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.PlaceholderTag.TagNumber">
            <summary>
            Gets or sets the TagNumber for this instance. This is the same as the "frameworkOriginalTagId"
            metadata but now exposed on the tag as well (the metadata will become deprecated).
            If needed, it will be populated on deserialization from the metadata, the value remains null
            iff not present (which should not be the case).
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.PlaceholderTag.Definition">
            <summary>
            Gets the definition of this item from the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton" />.
            </summary>
            <value>
            The definition of this item from the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton" />.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.PlaceholderTag.Type">
            <summary>
            Gets the type of <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/>.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PlaceholderTag.AcceptVisitor(Sdl.Core.Bcm.BcmModel.Common.BcmVisitor)">
            <summary>
            Accepts a visitor of type <see cref="T:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor" />.
            </summary>
            <param name="visitor">The <see cref="T:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor" /> used to visit this item.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PlaceholderTag.Equals(Sdl.Core.Bcm.BcmModel.MarkupData)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PlaceholderTag.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PlaceholderTag.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.PlaceholderTag.Clone">
            <summary>
            Clones this instance, setting a new id.
            </summary>
            <returns>A deep clone of this instance, with a new unique id.</returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.RevisionContainer">
            <summary>
            Marks revisions to the translated content.
            </summary>
            <seealso cref="T:Sdl.Core.Bcm.BcmModel.MarkupDataContainer" />
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.RevisionContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.RevisionContainer"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.RevisionContainer.#ctor(Sdl.Core.Bcm.BcmModel.RevisionType)">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.RevisionContainer"/> class.
            </summary>
            <param name="revisionType">Type of the revision.</param>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.RevisionContainer.RevisionType">
            <summary>
            Gets or sets the type of the revision.
            </summary>
            <value>
            The type of the revision.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.RevisionContainer.Author">
            <summary>
            Gets or sets the revision author.
            </summary>
            <value>
            The revision author.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.RevisionContainer.Timestamp">
            <summary>
            Gets or sets the date when the revision was added.
            </summary>
            <value>
            The date when the revision was added.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.RevisionContainer.Type">
            <summary>
            Gets the type of <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/>.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.RevisionContainer.AcceptVisitor(Sdl.Core.Bcm.BcmModel.Common.BcmVisitor)">
            <summary>
            Accepts a visitor of type <see cref="T:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor" />.
            </summary>
            <param name="visitor">The <see cref="T:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor" /> used to visit this item.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.RevisionContainer.Equals(Sdl.Core.Bcm.BcmModel.MarkupData)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.RevisionContainer.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.RevisionContainer.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.RevisionContainer.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A deep clone of this instance.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.RevisionContainer.UniqueClone">
            <summary>
            Clones this instance, setting a new unique id.
            </summary>
            <returns>A deep clone of this instance, with a new unique id.</returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.RevisionType">
            <summary>
            Types of <see cref="T:Sdl.Core.Bcm.BcmModel.RevisionContainer"/>.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.RevisionType.Inserted">
            <summary>
            Content was inserted.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.RevisionType.Deleted">
            <summary>
            Content was deleted.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.RevisionType.Unchanged">
            <summary>
            The content was not changed.
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Segment">
            <summary>
            Basic unit of translatable content.
            </summary>
            <seealso cref="T:Sdl.Core.Bcm.BcmModel.MarkupDataContainer" />
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Segment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Segment"/> class.
            </summary>
            <param name="segmentNumber">The segment number.</param>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Segment.ConfirmationLevel">
            <summary>
            Gets or sets the confirmation level (translation status).
            </summary>
            <value>
            The confirmation level (translation status).
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Segment.IsLocked">
            <summary>
            Gets or sets a value indicating whether this instance is locked for editing.
            </summary>
            <value>
              <c>true</c> if this instance is locked for editing; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Segment.WordCount">
            <summary>
            Gets or sets the word count.
            </summary>
            <value>
            The word count.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Segment.CharacterCount">
            <summary>
            Gets or sets the character count.
            </summary>
            <value>
            The character count.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Segment.SegmentNumber">
            <summary>
            Gets or sets the segment number.
            </summary>
            <value>
            The segment number.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Segment.TranslationOrigin">
            <summary>
            Gets or sets the translation origin (translation source information).
            </summary>
            <value>
            The translation origin.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Segment.Tokens">
            <summary>
            Gets or sets the tokens.
            </summary>
            <value>
            The tokens.
            </value>
            <remarks>Used by the tokenization process.</remarks>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Segment.AlignmentData">
            <summary>
            Gets or sets the alignment data.
            </summary>
            <value>
            The alignment data.
            </value>
            <remarks>Used by the alignment processing.</remarks>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Segment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Segment"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Segment.#ctor(System.String,Sdl.Core.Bcm.BcmModel.ConfirmationLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Segment"/> class.
            </summary>
            <param name="segmentNumber">The segment number.</param>
            <param name="confirmationLevel">The confirmation level.</param>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Segment.Type">
            <summary>
            Gets the type of <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/>.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Segment.AcceptVisitor(Sdl.Core.Bcm.BcmModel.Common.BcmVisitor)">
            <summary>
            Accepts a visitor of type <see cref="T:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor" />.
            </summary>
            <param name="visitor">The <see cref="T:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor" /> used to visit this item.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Segment.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A deep clone of this instance.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Segment.UniqueClone">
            <summary>
            Clones this instance, setting a new unique id.
            </summary>
            <returns>A deep clone of this instance, with a new unique id.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Segment.CloneWithoutChildren">
            <summary>
            Creates a clone of this instance, without any children elements.
            </summary>
            <returns>A clone of this instance, without any children elements.</returns>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Segment.SiblingSegment">
            <summary>
            Gets the sibling segment.
            </summary>
            <value>
            The sibling segment.
            </value>
            <remarks>If this is the source segment, it retrieves the target (and the other way around)</remarks>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Segment.Equals(Sdl.Core.Bcm.BcmModel.MarkupData)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Segment.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Segment.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Segment.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.SegmentationHint">
            <summary>
            Information on how specific tags should be segmented.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.SegmentationHint.Include">
            <summary>If possible, the segmentation engine should always include this tag inside a segment.</summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.SegmentationHint.MayExclude">
            <summary> The tag may be left outside of the segment, e.g. if it appears at a segment boundary.</summary>     
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.SegmentationHint.IncludeWithText">
            <summary>
            The tag will be included in a segment if the segment also contains text content,
            otherwise it will not be included in a segment (in order to prevent segment-only tags).
            </summary>        
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.SegmentationHint.Exclude">
            <summary>
            The tag will be excluded from a segment, even if this means changing the segmentation. This is used for sub-content processing.
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.SegmentMetaDataKeys">
            <summary>
            Constants for <see cref="T:Sdl.Core.Bcm.BcmModel.Segment"/> metadata.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.SegmentMetaDataKeys.SystemFields">
            <summary>
            <see cref="T:Sdl.Core.Bcm.BcmModel.Segment"/> metadata key for accesing system fields.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.SegmentMetaDataKeys.CustomFields">
            <summary>
            <see cref="T:Sdl.Core.Bcm.BcmModel.Segment"/> metadata key for accesing custom fields.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.SegmentMetaDataKeys.AlignmentTimestamp">
            <summary>
            <see cref="T:Sdl.Core.Bcm.BcmModel.Segment"/> metadata key for accesing alignment date.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.SegmentMetaDataKeys.TuId">
            <summary>
            <see cref="T:Sdl.Core.Bcm.BcmModel.Segment"/> metadata key for accesing the Translation Unit numerical id.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.SegmentMetaDataKeys.TuGuId">
            <summary>
            <see cref="T:Sdl.Core.Bcm.BcmModel.Segment"/> metadata key for accesing the Translation Unit GUID id.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.SegmentMetaDataKeys.Contexts">
            <summary>
            <see cref="T:Sdl.Core.Bcm.BcmModel.Segment"/> metadata key for accesing the associated contexts.
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.SegmentPair">
            <summary>
            Class grouping together the source and equivalent target <see cref="T:Sdl.Core.Bcm.BcmModel.Segment"/>.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.SegmentPair.#ctor(Sdl.Core.Bcm.BcmModel.Segment,Sdl.Core.Bcm.BcmModel.Segment)">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.SegmentPair"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.SegmentPair.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.SegmentPair.Target">
            <summary>
            Gets or sets the target.
            </summary>
            <value>
            The target.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.SegmentPair.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A deep clone of this instance.</returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Serialization.MarkupDataMapping">
            <summary>
            Factory providing mapping between <see cref="P:MarkupData.Type"/> string values and concrete implementations of <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/>.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Serialization.MarkupDataMapping.GetType(System.String)">
            <summary>
            Gets the concrete implementation of <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/>.
            </summary>
            <param name="type">The <see cref="P:MarkupData.Type"/> string.</param>
            <returns></returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Serialization.TokenMapping">
            <summary>
            Class for mapping to different types of <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token"/>.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Serialization.TokenMapping.GetType(System.String)">
            <summary>
            Gets the type of <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token"/> based on the string type.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Skeleton.CommentDefinition">
            <summary>
            Contains comment data. Can be referenced by multiple <see cref="T:Sdl.Core.Bcm.BcmModel.Annotations.CommentContainer"/> instances.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.CommentDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.CommentDefinition"/> class.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.CommentDefinition.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.CommentDefinition.Author">
            <summary>
            Gets or sets the author.
            </summary>
            <value>
            The author.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.CommentDefinition.Date">
            <summary>
            Gets or sets the comment creation date.
            </summary>
            <value>
            The comment creation date.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.CommentDefinition.CommentSeverity">
            <summary>
            Gets or sets the comment severity.
            </summary>
            <value>
            The comment severity.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.CommentDefinition.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A dee</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.CommentDefinition.Equals(Sdl.Core.Bcm.BcmModel.Skeleton.CommentDefinition)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.CommentDefinition.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.CommentDefinition.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Skeleton.CommentSeverity">
            <summary>
            Supported values of comment severity.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Skeleton.CommentSeverity.Low">
            <summary>
            Low comment severity.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Skeleton.CommentSeverity.Medium">
            <summary>
            Medium comment severity (default).
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Skeleton.CommentSeverity.High">
            <summary>
            High comment severity.
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Skeleton.Context">
            <summary>
            Context information, organized as a tree structure.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.Context.ContextDefinitionId">
            <summary>
            Id of the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.ContextDefinition"/> object holding the data for this specific <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.Context"/> element.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.Context.ParentContextId">
            <summary>
            The id of the parent <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.Context"/> element.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.Context.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A clone of this instance.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.Context.Equals(Sdl.Core.Bcm.BcmModel.Skeleton.Context)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.Context.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.Context.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.Context.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Skeleton.ContextDefinition">
            <summary>
            Holds context data.
            Can be referenced by multiple <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.Context"/> elements.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.ContextDefinition.IsTmContext">
            <summary>
            Gets or sets a value indicating whether this instance is a TM context.
            </summary>
            <value>
              <c>true</c> if this instance is TM context; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.ContextDefinition.IsStructureContext">
            <summary>
            Gets or sets a value indicating whether this instance is a structure context.
            </summary>
            <value>
              <c>true</c> if this instance is a structure context; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.ContextDefinition.TypeId">
            <summary>
            Gets or sets the context type identifier.
            </summary>
            <value>
            The context type identifier.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.ContextDefinition.DisplayName">
            <summary>
            Gets or sets the context display name.
            </summary>
            <value>
            The context display name.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.ContextDefinition.DisplayCode">
            <summary>
            Gets or sets the context display code.
            </summary>
            <value>
            The context display code.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.ContextDefinition.DisplayColor">
            <summary>
            Gets or sets the context display color.
            </summary>
            <value>
            The context display color.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.ContextDefinition.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.ContextDefinition.FormattingGroupId">
            <summary>
            Gets or sets the formatting group identifier.
            </summary>
            <value>
            The formatting group identifier.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.ContextDefinition.IsSidContext">
            <summary>
            Gets a value indicating whether this instance is sID context.
            </summary>
            <value>
              <c>true</c> if this instance is sID context; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.ContextDefinition.IsTmStructureContext">
            <summary>
            Gets a value indicating whether this instance is a TM structure context.
            </summary>
            <value>
              <c>true</c> if this instance is a TM structure context; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.ContextDefinition.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.ContextDefinition.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.ContextDefinition.Equals(Sdl.Core.Bcm.BcmModel.Skeleton.ContextDefinition)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.ContextDefinition.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.ContextDefinition.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton">
            <summary>
            Holds data for a <see cref="T:Sdl.Core.Bcm.BcmModel.File"/> that is referenced by different <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/> elements.    
            </summary>
            <example>
            A <see cref="T:Sdl.Core.Bcm.BcmModel.PlaceholderTag"/> element has a DefinitionId that points to an element in the <see cref="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.PlaceholderTagDefinitions"/> collection.
            </example>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.FileId">
            <summary>
            The <see cref="T:Sdl.Core.Bcm.BcmModel.File"/> id.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.CommentDefinitions">
            <summary>
            Collection of all the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.CommentDefinition"/> elements referenced in a <see cref="T:Sdl.Core.Bcm.BcmModel.File"/>.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.ContextDefinitions">
            <summary>
            Collection of all the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.ContextDefinition"/>elements referenced in a <see cref="T:Sdl.Core.Bcm.BcmModel.File"/>.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.Contexts">
            <summary>
            Collection of all the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.Context"/>elements referenced in a <see cref="T:Sdl.Core.Bcm.BcmModel.File"/>.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.FormattingGroups">
            <summary>
            Collection of all the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.FormattingGroup"/> elements referenced in a <see cref="T:Sdl.Core.Bcm.BcmModel.File"/>.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.StructureTagDefinitions">
            <summary>
            Collection of all the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.StructureTagDefinition"/> elements referenced in a <see cref="T:Sdl.Core.Bcm.BcmModel.File"/>.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.TagPairDefinitions">
            <summary>
            Collection of all the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.TagPairDefinition"/> elements referenced in a <see cref="T:Sdl.Core.Bcm.BcmModel.File"/>.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.PlaceholderTagDefinitions">
            <summary>
            Collection of all the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.PlaceholderTagDefinition"/> elements referenced in a <see cref="T:Sdl.Core.Bcm.BcmModel.File"/>.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.TerminologyData">
            <summary>
            Collection of all the <see cref="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.TerminologyData"/> elements referenced in a <see cref="T:Sdl.Core.Bcm.BcmModel.File"/>.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.QuickInsertIds">
            <summary>
            Collection of all the QuickInsert IDs referenced in a <see cref="T:Sdl.Core.Bcm.BcmModel.File"/>.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.SubContentPUs">
            <summary>
            List of all the IDs of <see cref="T:Sdl.Core.Bcm.BcmModel.ParagraphUnit"/>s that are sub-content elements.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.ParentFile">
            <summary>
            The <see cref="T:Sdl.Core.Bcm.BcmModel.File"/> for which this <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton"/> is defined.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.IdGenerator">
            <summary>
            An <see cref="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.IdGenerator"/> instance that creates unique numeric IDs for all the elements in different <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton"/> collection.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.#ctor">
            <summary>
            Public constructor.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.Equals(Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.ShouldSerializeCommentDefinitions">
            <summary>
            Used by JSON serialization.
            </summary>
            <returns><c>True</c> if <see cref="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.CommentDefinitions"/> should be serialized.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.ShouldSerializeContextDefinitions">
            <summary>
            Used by JSON serialization.
            </summary>
            <returns><c>True</c> if <see cref="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.ContextDefinitions"/> should be serialized.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.ShouldSerializeContexts">
            <summary>
            Used by JSON serialization.
            </summary>
            <returns><c>True</c> if <see cref="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.Contexts"/> should be serialized.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.ShouldSerializeFormattingGroups">
            <summary>
            Used by JSON serialization.
            </summary>
            <returns><c>True</c> if <see cref="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.FormattingGroups"/> should be serialized.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.ShouldSerializeStructureTagDefinitions">
            <summary>
            Used by JSON serialization.
            </summary>
            <returns><c>True</c> if <see cref="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.FormattingGroups"/> should be serialized.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.ShouldSerializeTagPairDefinitions">
            <summary>
            Used by JSON serialization.
            </summary>
            <returns><c>True</c> if <see cref="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.TagPairDefinitions"/> should be serialized.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.ShouldSerializePlaceholderTagDefinitions">
            <summary>
            Used by JSON serialization.
            </summary>
            <returns><c>True</c> if <see cref="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.PlaceholderTagDefinitions"/> should be serialized.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.ShouldSerializeTerminologyData">
            <summary>
            Used by JSON serialization.
            </summary>
            <returns><c>True</c> if <see cref="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.TerminologyData"/> should be serialized.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.ShouldSerializeSubContentPUs">
            <summary>
            Used by JSON serialization.
            </summary>
            <returns><c>True</c> if <see cref="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.SubContentPUs"/> should be serialized.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.ShouldSerializeQuickInsertIds">
            <summary>
            Used by JSON serialization.
            </summary>
            <returns><c>True</c> if <see cref="P:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton.QuickInsertIds"/> should be serialized.</returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Skeleton.FormattingGroup">
            <summary>
            Holds formatting elements that can be applied to different elements of BCM content.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.FormattingGroup.Items">
            <summary>
            Collection of formatting elements in this <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.FormattingGroup"/>.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.FormattingGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.FormattingGroup"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.FormattingGroup.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.FormattingGroup.Equals(Sdl.Core.Bcm.BcmModel.Skeleton.FormattingGroup)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.FormattingGroup.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.FormattingGroup.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.FormattingGroup.ShouldSerializeItems">
            <summary>
            Used by JSON serialization.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Skeleton.IdGenerator">
            <summary>
            Creates unique numeric IDs for all the elements in different <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton"/> collection.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.IdGenerator.GetNext``1">
            <summary>
            Gets the next ID.
            </summary>
            <typeparam name="T"></typeparam>
            <returns>The next ID in the sequence.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.IdGenerator.Update``1(``0)">
            <summary>
            Updates the ID sequence with the ID of the specified item.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="item">The item.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.IdGenerator.UpdateFrom(Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton)">
            <summary>
            Updates the ID sequence with the values from the specified <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton"/>.
            </summary>
            <param name="skeleton">The <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton"/>.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.IdGenerator.UpdateFrom(Sdl.Core.Bcm.BcmModel.Document)">
            <summary>
            Updates the ID sequence with the values from the specified <see cref="T:Sdl.Core.Bcm.BcmModel.Document"/>.
            </summary>
            <param name="document">The <see cref="T:Sdl.Core.Bcm.BcmModel.Document"/>.</param>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Skeleton.ITermAttributeContainer">
            <summary>
            Interface for BCM elements containing terminology attributes.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.ITermAttributeContainer.TermAttributes">
            <summary>
            Gets or sets the term attributes.
            </summary>
            <value>
            The term attributes.
            </value>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Skeleton.PlaceholderTagDefinition">
            <summary>
            Definition of a Placeholder.
            Can be referenced by multiple <see cref="T:Sdl.Core.Bcm.BcmModel.PlaceholderTag"/> elements.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.PlaceholderTagDefinition.DisplayText">
            <summary>
            Gets or sets the display text.
            </summary>
            <value>
            The display text.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.PlaceholderTagDefinition.TagContent">
            <summary>
            Gets or sets the raw Placeholder tag content.
            </summary>
            <value>
            The raw Placeholder tag content of the tag.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.PlaceholderTagDefinition.TextEquivalent">
            <summary>
            Gets or sets the tag text equivalent.
            </summary>
            <value>
            The tag text equivalent.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.PlaceholderTagDefinition.SegmentationHint">
            <summary>
            Gets or sets the segmentation hint.
            </summary>
            <value>
            The segmentation hint.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.PlaceholderTagDefinition.SubContent">
            <summary>
            Gets or sets the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.SubContentCollection"/> of the placeholder tag.
            </summary>
            <value>
            The <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.SubContentCollection"/> of the tag.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.PlaceholderTagDefinition.QuickInsertId">
            <summary>
            Gets or sets the QuickInsert ID of the tag.
            </summary>
            <value>
            The QuickInsert ID of the tag.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.PlaceholderTagDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.PlaceholderTagDefinition"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.PlaceholderTagDefinition.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A new clone of this instance.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.PlaceholderTagDefinition.Equals(Sdl.Core.Bcm.BcmModel.Skeleton.PlaceholderTagDefinition)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.PlaceholderTagDefinition.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.PlaceholderTagDefinition.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollection`1">
            <summary>
            Base class for collections used in a <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton"/>.
            </summary>
            <typeparam name="T"></typeparam>    
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollection`1.IdGenerator">
            <summary>
            Gets the <see cref="P:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollection`1.IdGenerator"/>.
            </summary>
            <value>
            The <see cref="P:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollection`1.IdGenerator"/>.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollection`1.ParentSkeleton">
            <summary>
            Gets or sets the parent <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton"/>.
            </summary>
            <value>
            The parent <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton"/>.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollection`1.GetById(System.Int32)">
            <summary>
            Gets an element by its numerical id.
            </summary>
            <param name="id">The id.</param>
            <returns>If found, returns the element with the Id <paramref name="id"/>; otherwise returns <c>default(<typeparamref name="T"/>)</c> </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollection`1.GetOrAdd(`0)">
            <summary>
            Gets the element if it already exists in the collection.
            Otherwise, it is added to the collection and gives it the next ID in the <see cref="P:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollection`1.IdGenerator"/> sequence.
            </summary>
            <param name="elem">The element.</param>
            <returns>The existing element; or the newly added one with an Id set.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollection`1.GetOrAddWithExistingId(`0)">
            <summary>
            Gets the element if it already exists in the collection.
            Otherwise, it is added to the collection (preserving its existing ID).
            </summary>
            <param name="elem">The element.</param>
            <returns>The existing element; or the newly added one with an Id set.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollection`1.GetKeyForItem(`0)">
            <summary>
            Extracts the key from the specified element.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>
            The key for the specified element.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollection`1.ClearItems">
            <summary>
            Removes all elements from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollection`1.InsertItem(System.Int32,`0)">
            <summary>
            Inserts an element into the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollection`1.RemoveItem(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.
            </summary>
            <param name="index">The index of the element to remove.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollection`1.SetItem(System.Int32,`0)">
            <summary>
            Replaces the item at the specified index with the specified item.
            </summary>
            <param name="index">The zero-based index of the item to be replaced.</param>
            <param name="item">The new item.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollection`1.Equals(Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollection{`0})">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollectionKey">
            <summary>
            Wrapper used for defining integer keys in the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton"/> collections.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollectionKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollectionKey"/> struct.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollectionKey.From(System.Int32)">
            <summary>
            Creates a new <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollectionKey"/> from an integer.
            </summary>
            <param name="from">The value with which to initialize this instance.</param>
            <returns>A new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollectionKey"/></returns>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollectionKey.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollectionKey.Equals(Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollectionKey)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollectionKey.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollectionKey.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollectionKey.op_Equality(Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollectionKey,Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollectionKey)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left hand item.</param>
            <param name="right">The right hand item.</param>
            <returns>
            The result of <see cref="M:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollectionKey.Equals(Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollectionKey)"/>
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollectionKey.op_Inequality(Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollectionKey,Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollectionKey)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left hand item.</param>
            <param name="right">The right hand item.</param>
            <returns>
            The negated result of <see cref="M:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollectionKey.Equals(Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonCollectionKey)"/>
            </returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonItem">
            <summary>
            Base class for different types of elements definied in a <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton"/>.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonItem.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonItem.Equals(Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonItem)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonItem.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.SkeletonItem.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Skeleton.StructureTagDefinition">
            <summary>
            Definition of a StructureTag.
            Can be referenced by multiple <see cref="T:Sdl.Core.Bcm.BcmModel.StructureTag"/> elements.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.StructureTagDefinition.DisplayText">
            <summary>
            Gets or sets the display text.
            </summary>
            <value>
            The display text.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.StructureTagDefinition.TagContent">
            <summary>
            Gets or sets the content of the tag.
            </summary>
            <value>
            The content of the tag.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.StructureTagDefinition.SubContent">
            <summary>
            Gets or sets the localizable sub-content.
            </summary>
            <value>
            The localizable sub-content.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.StructureTagDefinition.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A clone of this instance.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.StructureTagDefinition.Equals(Sdl.Core.Bcm.BcmModel.Skeleton.StructureTagDefinition)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.StructureTagDefinition.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.StructureTagDefinition.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Skeleton.SubContentCollection">
            <summary>
            Collection of subcontent <see cref="T:Sdl.Core.Bcm.BcmModel.LocalizableSubContent"/> elements.
            Can appear in different <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/> elements.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.SubContentCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.SubContentCollection"/> class.
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Skeleton.TagPairDefinition">
            <summary>
            Definition of a TagPair.
            Can be referenced by multiple <see cref="T:Sdl.Core.Bcm.BcmModel.TagPair"/> elements.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.TagPairDefinition.StartTagDisplayText">
            <summary>
            Gets or sets the start tag display text.
            </summary>
            <value>
            The start tag display text.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.TagPairDefinition.StartTagContent">
            <summary>
            Gets or sets the raw start tag conten.
            </summary>
            <value>
            The raw start tag content.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.TagPairDefinition.EndTagDisplayText">
            <summary>
            Gets or sets the end tag display text.
            </summary>
            <value>
            The end tag display text.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.TagPairDefinition.EndTagContent">
            <summary>
            Gets or sets the raw end tag content.
            </summary>
            <value>
            The raw end tag content.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.TagPairDefinition.CanHide">
            <summary>
            Gets or sets a value indicating whether this tag can be hidden when displayed.
            </summary>
            <value>
              <c>true</c> if this tag can be hidden when displayed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.TagPairDefinition.SegmentationHint">
            <summary>
            Gets or sets the segmentation hint.
            </summary>
            <value>
            The segmentation hint.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.TagPairDefinition.FormattingGroupId">
            <summary>
            Gets or sets the formatting group identifier.
            </summary>
            <value>
            The formatting group identifier.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.TagPairDefinition.SubContent">
            <summary>
            Gets or sets the localizable subcontent.
            </summary>
            <value>
            The localizable subcontent.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.TagPairDefinition.QuickInsertId">
            <summary>
            Gets or sets the QuickInsert identifier of this tag.
            </summary>
            <value>
            The QuickInsert identifier of this tag.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.TagPairDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.TagPairDefinition"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.TagPairDefinition.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.TagPairDefinition.Equals(Sdl.Core.Bcm.BcmModel.Skeleton.TagPairDefinition)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.TagPairDefinition.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.TagPairDefinition.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Skeleton.Term">
            <summary>
            Terminology element.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.Term.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.Term.Text">
            <summary>
            Gets or sets the terminology text.
            </summary>
            <value>
            The terminology text.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.Term.Score">
            <summary>
            Gets or sets the terminology score.
            </summary>
            <value>
            The terminology score.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.Term.TermOrigin">
            <summary>
            Gets or sets the term origin.
            </summary>
            <value>
            The term origin.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.Term.TermTranslations">
            <summary>
            Gets or sets the term translations.
            </summary>
            <value>
            The term translations.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.Term.TermAttributes">
            <summary>
            Gets or sets term level attributes contained at any level within the termbase field structures.
            </summary>
            <value>
            The term attributes.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.Term.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.Term"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.Term.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A deep clone of this instance.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.Term.Equals(Sdl.Core.Bcm.BcmModel.Skeleton.Term)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.Term.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.Term.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.Term.ShouldSerializeTermTranslations">
            <summary>
            Used by JSON serialization.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.Term.ShouldSerializeTermAttributes">
            <summary>
            Used by JSON serialization.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Skeleton.TerminologyData">
            <summary>
            Data containing a list of <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.Term"/>s representing terminology information.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.TerminologyData.Origin">
            <summary>
            Gets or sets the origin of the terminology information.
            </summary>
            <value>
            The origin.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.TerminologyData.Terms">
            <summary>
            Gets or sets the terms.
            </summary>
            <value>
            The terms.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.TerminologyData.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A deep clone of this instance.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.TerminologyData.Equals(Sdl.Core.Bcm.BcmModel.Skeleton.TerminologyData)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.TerminologyData.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.TerminologyData.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Skeleton.TermOrigin">
            <summary>
            Data on the creation origin of <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.Term"/>.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.TermOrigin.SystemId">
            <summary>
            Gets or sets the identifier of the terminology system.
            </summary>
            <value>
            The terminology system identifier.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.TermOrigin.SystemName">
            <summary>
            Gets or sets the terminology system nane.
            </summary>
            <value>
            The terminology system name.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.TermOrigin.ResourceId">
            <summary>
            Gets or sets the terminology resource identifier.
            </summary>
            <value>
            The terminology resource identifier.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.TermOrigin.ResourceName">
            <summary>
            Gets or sets the name of the terminology resource.
            </summary>
            <value>
            The name of the terminology resource.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.TermOrigin.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.TermOrigin.Equals(Sdl.Core.Bcm.BcmModel.Skeleton.TermOrigin)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.TermOrigin.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.TermOrigin.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Skeleton.TermTranslation">
            <summary>
            Translation of a specific <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.Term"/>.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.TermTranslation.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.TermTranslation.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Skeleton.TermTranslation.TermAttributes">
            <summary>
            Gets or sets the term attributes.
            </summary>
            <value>
            The term attributes.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.TermTranslation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.TermTranslation"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.TermTranslation.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.TermTranslation.Equals(Sdl.Core.Bcm.BcmModel.Skeleton.TermTranslation)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.TermTranslation.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.TermTranslation.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Skeleton.TermTranslation.ShouldSerializeTermAttributes">
            <summary>
            Used by JSON serialization.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.StructureTag">
            <summary>
            A tag that is used for document structure only and has no translatable content.
            </summary>    
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.StructureTag.StructureTagDefinitionId">
            <summary>
            Gets or sets the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.StructureTagDefinition"/> id of this instance.
            </summary>
            <value>
            The <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.StructureTagDefinition"/> id of this instance.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.StructureTag.TagNumber">
            <summary>
            Gets or sets the TagNumber for this instance. This is the same as the "frameworkOriginalTagId"
            metadata but now exposed on the tag as well (the metadata will become deprecated).
            If needed, it will be populated on deserialization from the metadata, the value remains null
            iff not present (which should not be the case).
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.StructureTag.Definition">
            <summary>
            Gets the definition of this item from the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton" />.
            </summary>
            <value>
            The definition of this item from the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton" />.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.StructureTag.Type">
            <summary>
            Gets the type of <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/>.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.StructureTag.AcceptVisitor(Sdl.Core.Bcm.BcmModel.Common.BcmVisitor)">
            <summary>
            Accepts a visitor of type <see cref="T:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor" />.
            </summary>
            <param name="visitor">The <see cref="T:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor" /> used to visit this item.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.StructureTag.Equals(Sdl.Core.Bcm.BcmModel.MarkupData)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.StructureTag.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.StructureTag.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.StructureTag.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A deep clone of this instance.</returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.TagPair">
            <summary>
            A tag composed of a start and and end tag.
            Can contain other <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/> elements.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.TagPair.TagPairDefinitionId">
            <summary>
            Gets or sets the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.TagPairDefinition"/> id for this instance.
            </summary>
            <value>
            The <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.TagPairDefinition"/> id for this instance.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.TagPair.TagNumber">
            <summary>
            Gets or sets the TagNumber for this instance. This is the same as the "frameworkOriginalTagId"
            metadata but now exposed on the tag as well (the metadata will become deprecated).
            If needed, it will be populated on deserialization from the metadata, the value remains null
            iff not present (which should not be the case).
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.TagPair.Definition">
            <summary>
            Gets the definition of this item from the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton" />.
            </summary>
            <value>
            The definition of this item from the <see cref="T:Sdl.Core.Bcm.BcmModel.Skeleton.FileSkeleton" />.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.TagPair.Type">
            <summary>
            Gets the type of <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/>.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.TagPair.AcceptVisitor(Sdl.Core.Bcm.BcmModel.Common.BcmVisitor)">
            <summary>
            Accepts a visitor of type <see cref="T:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor" />.
            </summary>
            <param name="visitor">The <see cref="T:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor" /> used to visit this item.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.TagPair.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A deep clone of this instance.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.TagPair.UniqueClone">
            <summary>
            Clones this instance, setting a new id.
            </summary>
            <returns>A deep clone of this instance, with a new unique id.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.TagPair.Equals(Sdl.Core.Bcm.BcmModel.MarkupData)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.TagPair.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.TagPair.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance.
            </returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.TagPairMetaDataKeys">
            <summary>
            Constants used a keys for <see cref="T:Sdl.Core.Bcm.BcmModel.TagPair"/> metadata.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.TagPairMetaDataKeys.FrameworkOriginalTagId">
            <summary>
            Metadata key identifying the original <see cref="T:Sdl.Core.Bcm.BcmModel.TagPair"/> id set by the SDL Filter Framework.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.TagPairMetaDataKeys.FrameworkOriginalSegmentationHint">
            <summary>
            Metadata key identifying the original <see cref="T:Sdl.Core.Bcm.BcmModel.TagPair"/> segmentation hint set by the SDL Filter Framework.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.TagPairMetaDataKeys.EndTagMetadataPrefix">
            <summary>
            Metadata key used for prefixing end tag related metadata (used by internal conversion).
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.TextContextMatchLevel">
            <summary>
            Used with textual context matches to indicate the level of matching.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.TextContextMatchLevel.None">
            <summary>
            The textual context does not match.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.TextContextMatchLevel.Source">
            <summary>
            Source content matches with surrounding source content.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.TextContextMatchLevel.SourceAndTarget">
            <summary>
            Source and target matches surrounding source and target content.
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.TextMarkup">
            <summary>
            A <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/> containing plain text.
            </summary>
            <seealso cref="T:Sdl.Core.Bcm.BcmModel.MarkupData" />
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.TextMarkup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.TextMarkup"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.TextMarkup.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.TextMarkup"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.TextMarkup.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.TextMarkup.Type">
            <summary>
            Gets the type of <see cref="T:Sdl.Core.Bcm.BcmModel.MarkupData"/>.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.TextMarkup.AcceptVisitor(Sdl.Core.Bcm.BcmModel.Common.BcmVisitor)">
            <summary>
            Accepts a visitor of type <see cref="T:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor" />.
            </summary>
            <param name="visitor">The <see cref="T:Sdl.Core.Bcm.BcmModel.Common.BcmVisitor" /> used to visit this item.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.TextMarkup.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.TextMarkup.Equals(Sdl.Core.Bcm.BcmModel.MarkupData)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.TextMarkup.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.TextMarkup.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance,
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.TextMarkup.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A deep clone of this instance.</returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.DateTimePatternType">
            <summary>
            DateTime patterns used by <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token"/> elements.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.DateTimePatternType.LongDate">
            <summary>
            The pattern represents a long date pattern
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.DateTimePatternType.ShortDate">
            <summary>
            The pattern represents a short date pattern 
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.DateTimePatternType.ShortTime">
            <summary>
            The pattern represents a short time pattern
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.DateTimePatternType.LongTime">
            <summary>
            The pattern represents a long time pattern
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.NumericSeparator">
            <summary>
            The numeric separators type which can occur in a number token.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.NumericSeparator.None">
            <summary>
            Indicates that no explicit separator is used.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.NumericSeparator.Primary">
            <summary>
            Indicates that the culture's primary separator (group or decimal separator) is used.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.NumericSeparator.Alternate">
            <summary>
            Indicates that an alternate separator (group or decimal separator) is used.
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnit">
            <summary>
            Contains static definitions of physical measurement units.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnit.GetSystem(Sdl.Core.Bcm.BcmModel.Tokenization.Unit)">
            <summary>
            Obtains the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.UnitSystem"/> of the specified unit.
            </summary>
            <param name="unit">The unit to look up</param>
            <returns>The unit system of the unit, or <see cref="F:Sdl.Core.Bcm.BcmModel.Tokenization.UnitSystem.NoSystem"/> if the 
            unit is unknown.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnit.IsMetric(Sdl.Core.Bcm.BcmModel.Tokenization.Unit)">
            <summary>
            Determines whether the specified unit belongs to the metric system.
            </summary>
            <param name="unit">The unit</param>
            <returns><c>true</c> if the unit belongs to the metric system, or <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnit.GetUnitType(Sdl.Core.Bcm.BcmModel.Tokenization.Unit)">
            <summary>
            Obtains the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.UnitType"/> of the specified unit.
            </summary>
            <param name="unit">The unit to look up</param>
            <returns>The unit type of the unit, or <see cref="F:Sdl.Core.Bcm.BcmModel.Tokenization.UnitType.NoType"/> if the 
            unit is unknown.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnit.AreUnitTypesCompatible(Sdl.Core.Bcm.BcmModel.Tokenization.Unit,Sdl.Core.Bcm.BcmModel.Tokenization.Unit)">
            <summary>
            Determines whether the unit types of the specified units are compatible. 
            Two unit types are compatible if both their types are well-defined 
            (not "other" or "no type") and are identical.
            </summary>
            <param name="a">The first unit</param>
            <param name="b">The second unit</param>
            <returns>A flag indicating whether the units' types are compatible or not.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnit.GetAbbreviations(Sdl.Core.Bcm.BcmModel.Tokenization.Unit)">
            <summary>
            Gets the known abbreviations for the specified unit. The return value may indicate
            vertical bars to indicate multiple alternative abbreviations.
            </summary>
            <param name="unit">The unit to look up</param>
            <returns>The known abbreviations for the unit, or <c>null</c> if the unit 
            wasn't found or has no known abbreviations.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnit.GetPreferredAbbreviation(Sdl.Core.Bcm.BcmModel.Tokenization.Unit,System.Globalization.CultureInfo)">
            <summary>
            Gets the preferred abbreviation for the specified unit. The preferred abbreviation
            is used for auto-localization. It is the first abbreviation in a list of alternative
            abbreviations for the unit.
            </summary>
            <param name="unit">The unit to look up</param>
            <param name="culture">An optional culture, in which case the method will 
            return the preferred abbreviation for the target culture (currently ignored)</param>
            <returns>The preferred abbreviation for the unit, or <c>null</c> if the unit 
            wasn't found or has no known abbreviation.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnit.GetName(Sdl.Core.Bcm.BcmModel.Tokenization.Unit)">
            <summary>
            Gets the name for the specified unit.
            </summary>
            <param name="unit">The unit</param>
            <returns>The name of the unit, or <c>null</c> if the unit is unknown or has no name.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnit.GetDefaultSystem(Sdl.Core.Bcm.BcmModel.Tokenization.UnitType,System.Globalization.CultureInfo)">
            <summary>
            Determines the default <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.UnitSystem"/> for the specified unit type in the
            specified culture.
            </summary>
            <param name="type">The type of the unit</param>
            <param name="culture">The culture to determine the default system for</param>
            <returns>The default unit system for the specified combination of unit type and
            culture, or <see cref="F:Sdl.Core.Bcm.BcmModel.Tokenization.UnitSystem.Metric"/> if no information about the default
            system is available.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnit.AreUnitsSameCategory(System.String,System.String)">
            <summary>
            Checks if two units are in the same category.
            </summary>
            <param name="UnitA">The first unit.</param>
            <param name="UnitB">The second unit.</param>
            <returns><c>True</c> if the units are in the same category; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnit.Find(Sdl.Core.Bcm.BcmModel.Tokenization.Unit)">
            <summary>
            Looks up the unit description for the specified unit.
            </summary>
            <param name="unit">The unit to look up</param>
            <returns>The unit description, or <c>null</c> if none is found.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnitDescription.#ctor">
            <summary>
            For XML (de)serialization only
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnitDescription.#ctor(Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnitDescription)">
            <summary>
            Initializes a new instance, using the values of another instance, creating a deep copy.
            </summary>
            <param name="other">The instance to copy</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnitDescription.#ctor(Sdl.Core.Bcm.BcmModel.Tokenization.Unit,Sdl.Core.Bcm.BcmModel.Tokenization.UnitType,Sdl.Core.Bcm.BcmModel.Tokenization.UnitSystem,System.Boolean,System.Int32,System.Double,Sdl.Core.Bcm.BcmModel.Tokenization.Unit,System.String,System.String)">
            <summary>
            Initializes a new instance with the provided values.
            </summary>
            <param name="u">The unit</param>
            <param name="ut">The unit type</param>
            <param name="us">The unit system</param>
            <param name="isCanonical">A flag indicating whether this unit is canonical for the 
            specified unit type (i.e. is the base for conversions)</param>
            <param name="magnitude">The magnitude level of this unit</param>
            <param name="conversionFactor">The conversion factor to the conversion unit</param>
            <param name="conversionUnit">The unit to use for conversions</param>
            <param name="name">The name of the unit</param>
            <param name="abbreviation">The abbreviations of this unit, separated by a vertical bar</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnitDescription.#ctor(Sdl.Core.Bcm.BcmModel.Tokenization.Unit,Sdl.Core.Bcm.BcmModel.Tokenization.UnitType,Sdl.Core.Bcm.BcmModel.Tokenization.UnitSystem,System.Boolean,System.Int32,System.Double,Sdl.Core.Bcm.BcmModel.Tokenization.Unit,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance with the provided values.
            </summary>
            <param name="u">The unit</param>
            <param name="ut">The unit type</param>
            <param name="us">The unit system</param>
            <param name="isCanonical">A flag indicating whether this unit is canonical for the 
            specified unit type (i.e. is the base for conversions)</param>
            <param name="magnitude">The magnitude level of this unit</param>
            <param name="conversionFactor">The conversion factor to the conversion unit</param>
            <param name="conversionUnit">The unit to use for conversions</param>
            <param name="name">The name of the unit</param>
            <param name="abbreviation">The abbreviations of this unit, separated by a vertical bar</param>
            <param name="preferredAbbreviation">The preferred abbreviation (optional)</param>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnitDescription.Unit">
            <summary>
            Gets or sets the unit
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnitDescription.UnitType">
            <summary>
            Gets or sets the unit type
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnitDescription.UnitSystem">
            <summary>
            Gets or sets the unit system
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnitDescription.IsCanonical">
            <summary>
            Gets or sets a flag which indicates whether this unit is the canonical unit in the 
            current unit type and system
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnitDescription.Magnitude">
            <summary>
            Gets or sets the magnitude of this unit, in comparison to other units of the same type and system.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnitDescription.ConversionFactor">
            <summary>
            Gets or sets the conversion factor to apply when converting to the <see cref="P:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnitDescription.ConversionUnit"/>
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnitDescription.ConversionUnit">
            <summary>
            Gets or sets the conversion unit to use when converting across unit systems
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnitDescription.Name">
            <summary>
            Gets or sets the name of the unit
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnitDescription.Abbreviations">
            <summary>
            Gets or sets the standard (culture-independent) abbreviations of this unit, separated by a 
            vertical bar.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.PhysicalUnitDescription.CultureSpecificAbbreviations">
            <summary>
            Gets or sets a list of culture-specific abbreviations for this unit, 
            in the form of pairs where the first part is a culture code, and the
            second is the list of abbreviations.
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentPosition">
            <summary>
            Represents a position within a segment.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentPosition.RunIndex">
            <summary>
            Gets or sets the index of the run (segment element) within the segment.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentPosition.PositionInRun">
            <summary>
            Gets or sets the position within the subsegment.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentPosition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentPosition"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentPosition.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance with the specified arguments.
            </summary>
            <param name="runIndex">The index of the segment element within the segment.</param>
            <param name="positionInRun">The position within the run. This is only 
            relevant for <see cref="T:System.Net.Mime.MediaTypeNames.Text"/> elements, and has no effect for other segment
            element types.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentPosition.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentPosition.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentPosition.Compare(Sdl.Core.Bcm.BcmModel.Tokenization.SegmentPosition,Sdl.Core.Bcm.BcmModel.Tokenization.SegmentPosition)">
            <summary>
            Compares two segment positions and returns an indication of their sort order.
            </summary>
            <param name="a">The first of the two items to compare.</param>
            <param name="b">The second of the two items to compare.</param>
            <returns>An int value less than zero if a precedes b, zero if a denotes the same position as b, and greater than zero if a follows b.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentPosition.Clone">
            <summary>
            Creates a new instance that is a deep copy of this instance.
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentPosition.ToString">
            <summary>
            <see cref="M:System.Object.ToString"/>
            </summary>
            <returns>A string representation of the object, for display purposes.</returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentRange">
            <summary>
            A selection of content inside a <see cref="T:Sdl.Core.Bcm.BcmModel.Segment"/>.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentRange.From">
            <summary>
            Gets or sets the start <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentPosition"/> in the segment.
            </summary>
            <value>
            The start <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentPosition"/> in the segment.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentRange.Into">
            <summary>
            Gets or sets the end <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentPosition"/> in the segment.
            </summary>
            <value>
            The end <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentPosition"/> in the segment.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentRange"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentRange.#ctor(Sdl.Core.Bcm.BcmModel.Tokenization.SegmentPosition,Sdl.Core.Bcm.BcmModel.Tokenization.SegmentPosition)">
            <summary>
            Initializes a new instance with the provided positions.
            </summary>
            <param name="from">The start position.</param>
            <param name="into">The end position.</param>        
            <remarks>No checks are performed to verify that the start position precedes the end position.</remarks>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentRange.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of with the given parameters.
            </summary>
            <param name="runIndex">The segment element index (run) of the range.</param>
            <param name="fromIndex">The start position in the run.</param>
            <param name="intoIndex">The end position (inclusive) in the run.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentRange.Equals(Sdl.Core.Bcm.BcmModel.Tokenization.SegmentRange)">
            <summary>
            Compares the current range to another segment range.
            </summary>
            <param name="other">The range to compare with.</param>
            <returns>true if both ranges are identical.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentRange.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentRange.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentRange.Compare(Sdl.Core.Bcm.BcmModel.Tokenization.SegmentRange,Sdl.Core.Bcm.BcmModel.Tokenization.SegmentRange)">
            <summary>
            Compares two segment ranges and returns a value indicating their order.
            </summary>
            <param name="a">The first of the two items to compare.</param>
            <param name="b">The second of the two items to compare.</param>
            <returns>An integer value less than zero if a precedes b, zero if a and b are in the same range, 
            and a value greater than zero if a follows b. Only the start positions are compared.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentRange.Clone">
            <summary>
            Creates a new instance that is a deep copy of this instance.
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.SegmentRange.ToString">
            <summary>
            <see cref="M:System.Object.ToString"/>
            </summary>
            <returns>A string representation of the object, for display purposes.</returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.Sign">
            <summary>
            The sign of a number
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Sign.None">
            <summary>
            No explicit sign at the start of the number.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Sign.Plus">
            <summary>
            An explicit plus sign at the start of the number.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Sign.Minus">
            <summary>
            A minus sign at the start of the number.
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.Similarity">
            <summary>
            A similarity level between segment elements.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Similarity.None">
            <summary>
            The items are not similar to each other
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Similarity.IdenticalType">
            <summary>
            The items are of the same type (e.g. numbers), but their value differs
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Similarity.IdenticalValueAndType">
            <summary>
            The items are of the same type (e.g. numbers), and their value is identical or near-identical
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.TagType">
            <summary>
            Types of tags appearing in tokenization data.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.TagType.Undefined">
            <summary>
            Represents an undefined tag type. This is also used for "dummy tags" which may 
            be added to a segment in case a tag was deleted from the original segment. Such
            a situation occurs when the translation engine deletes tags, but the number of 
            tokens must remain constant in the translation proposal as otherwise the token
            positions will become invalid.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.TagType.Start">
            <summary>
            Represents a starting tag.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.TagType.End">
            <summary>
            Represents an ending tag.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.TagType.Standalone">
            <summary>
            Represents a standalone tag.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.TagType.TextPlaceholder">
            <summary>
            A standalone tag which represents text, not formatting.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.TagType.LockedContent">
            <summary>
            Group of (locked) tag/text content that should be treated as a single placeable.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.TagType.UnmatchedStart">
            <summary>
            For TMX processing only: unmatched start tag (it pos=start)
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.TagType.UnmatchedEnd">
            <summary>
            For TMX processing only: unmatched end tag (it pos=end)
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AbbreviationToken">
            <summary>
            A <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token"/> used for abreviations.
            </summary>
            <seealso cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token" />
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AbbreviationToken.Type">
            <summary>
            Gets the type of <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token" />.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AbbreviationToken.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AbbreviationToken"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AbbreviationToken.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AbbreviationToken"/> class.
            </summary>
            <param name="text">The token text</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AbbreviationToken.#ctor(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
            Initializes a new instance with the values from another instance, creating a deep copy.
            </summary>
            <param name="other">The instance to create a copy for</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AbbreviationToken.Clone">
            <summary>
            See <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.Clone"/>
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AbbreviationToken.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
            <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)"/>
            </summary>
            <param name="other">The other instance.</param>
            <returns>A value indicating the degree of similarity to the provided segment element.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AbbreviationToken.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AbbreviationToken.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode(object)"/>
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AcronymToken">
            <summary>
            A <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token"/> representing acronyms.
            </summary>
            <seealso cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token" />
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AcronymToken.Type">
            <summary>
            Gets the type of <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token" />.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AcronymToken.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AcronymToken"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AcronymToken.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AcronymToken" /> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AcronymToken.#ctor(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
            Initializes a new instance with the values from another instance, creating a deep copy.
            </summary>
            <param name="other">The instance to create a copy for</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AcronymToken.Clone">
            <summary>
            See <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.Clone"/>
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AcronymToken.IsSubstitutable">
            <summary>
            <see cref="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.IsSubstitutable"/>. Returns <c>true</c> if this token represents
            a variable.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AcronymToken.IsPlaceable">
            <summary>
            <see cref="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.IsPlaceable"/>. Returns <c>true</c> if the token represents
            an acronym, a variable, a URI, or a generic text placeable.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AcronymToken.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
            <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)"/>
            </summary>
            <param name="other">The other instance.</param>
            <returns>A value indicating the degree of similarity to the provided segment element.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AcronymToken.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AcronymToken.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode(object)"/>
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AlphanumericToken">
            <summary>
            A <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token"/> representing alphanumeric tokens.
            </summary>
            <seealso cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token" />
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AlphanumericToken.Type">
            <summary>
            Gets the type of <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token" />.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AlphanumericToken.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AlphanumericToken"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AlphanumericToken.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AlphanumericToken"/> class.
            </summary>
            <param name="text">The token text</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AlphanumericToken.#ctor(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
            Initializes a new instance with the values from another instance, creating a deep copy.
            </summary>
            <param name="other">The instance to create a copy for</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AlphanumericToken.Clone">
            <summary>
            See <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.Clone"/>
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AlphanumericToken.IsSubstitutable">
            <summary>
            <see cref="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.IsSubstitutable"/>. Returns <c>true</c> if this token represents
            a variable.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AlphanumericToken.IsPlaceable">
            <summary>
            <see cref="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.IsPlaceable"/>. Returns <c>true</c> if the token represents
            an acronym, a variable, a URI, or a generic text placeable.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AlphanumericToken.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
            <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)"/>
            </summary>
            <param name="other">The other instance.</param>
            <returns>A value indicating the degree of similarity to the provided segment element.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AlphanumericToken.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.AlphanumericToken.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode(object)"/>
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.CharSequenceToken">
            <summary>
            A <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token"/> representing sequence of characters.
            </summary>
            <seealso cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token" />
            <remarks>This is used in contexts (such as tokenization of some far-east languages) where word boundaries cannot easily be determined.</remarks>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.CharSequenceToken.Type">
            <summary>
            Gets the type of <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token" />.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.CharSequenceToken.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.CharSequenceToken"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.CharSequenceToken.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.CharSequenceToken"/> class.
            </summary>
            <param name="text">The token text</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.CharSequenceToken.#ctor(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.CharSequenceToken"/> class.
            </summary>
            <param name="other">The instance to copy</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.CharSequenceToken.Clone">
            <summary>
            See <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.Clone"/>
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.CharSequenceToken.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
            <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)"/>
            </summary>
            <param name="other">The other instance.</param>
            <returns>A value indicating the degree of similarity to the provided segment element.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.CharSequenceToken.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.CharSequenceToken.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode(object)"/>
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.DateTimeToken">
            <summary>
            A <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token"/> represent date/time tokens.
            </summary>
            <seealso cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token" />
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.DateTimeToken.Type">
            <summary>
            Gets the type of <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token" />.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.DateTimeToken.Value">
            <summary>
            position of segment within the segment
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.DateTimeToken.DateTimeType">
            <summary>
            position of segment within the segment
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.DateTimeToken.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.DateTimeToken"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.DateTimeToken.#ctor(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.DateTimeToken)">
            <summary>
            Initializes a new instance with the values of another token, creating a deep copy.
            </summary>
            <param name="other">The other token (must not be null)</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.DateTimeToken.#ctor(System.String,System.DateTime,Sdl.Core.Bcm.BcmModel.Tokenization.DateTimePatternType)">
            <summary>
            Initializes a new instance with the specified values.
            </summary>
            <param name="text">The text to assign to the token</param>
            <param name="dateTime">The <see cref="T:System.DateTime"/> object to assign to the 
            token's value</param>
            <param name="type">The type of the date or time token</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.DateTimeToken.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.DateTimeToken.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.DateTimeToken.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
            <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)"/>
            </summary>
            <param name="other">The other instance.</param>
            <returns>A value indicating the degree of similarity to the provided segment element.</returns>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.DateTimeToken.IsPlaceable">
            <summary>
            <see cref="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.IsPlaceable"/>. Always <c>true</c> for this class.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.DateTimeToken.IsSubstitutable">
            <summary>
            <see cref="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.IsSubstitutable"/>. Always <c>true</c> for this class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.DateTimeToken.Clone">
            <summary>
            See <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.Clone"/>
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.DateTimeToken.IsDateToken">
            <summary>
            Gets a value to indicate whether this token represents a date or not.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.DateTimeToken.IsTimeToken">
            <summary>
            Gets a value to indicate whether this token represents a time or not.
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.GeneralPunctuationToken">
            <summary>
            A <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token"/> representing general punctuation tokens.
            </summary>
            <seealso cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token" />
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.GeneralPunctuationToken.Type">
            <summary>
            Gets the type of <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token" />.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.GeneralPunctuationToken.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.GeneralPunctuationToken"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.GeneralPunctuationToken.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.GeneralPunctuationToken"/> class.
            </summary>
            <param name="text">The token text</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.GeneralPunctuationToken.#ctor(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.GeneralPunctuationToken"/> class.
            </summary>
            <param name="other">The instance to copy</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.GeneralPunctuationToken.Clone">
            <summary>
            See <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.Clone"/>
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.GeneralPunctuationToken.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
            <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)"/>
            </summary>
            <param name="other">The other instance.</param>
            <returns>A value indicating the degree of similarity to the provided segment element.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.GeneralPunctuationToken.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.GeneralPunctuationToken.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode(object)"/>
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.IPAdressToken">
            <summary>
            Used for IP address tokens.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.IPAdressToken.Type">
            <summary>
            Gets the type of <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token" />.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.IPAdressToken.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.IPAdressToken"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.IPAdressToken.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.IPAdressToken"/> class.
            </summary>
            <param name="text">The token text</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.IPAdressToken.#ctor(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
            Initializes a new instance with the values from another instance, creating a deep copy.
            </summary>
            <param name="other">The instance to create a copy for</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.IPAdressToken.Clone">
            <summary>
            See <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.Clone"/>
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.IPAdressToken.IsSubstitutable">
            <summary>
            <see cref="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.IsSubstitutable"/>. Returns <c>true</c> if this token represents
            a variable.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.IPAdressToken.IsPlaceable">
            <summary>
            <see cref="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.IsPlaceable"/>. Returns <c>true</c> if the token represents
            an acronym, a variable, a URI, or a generic text placeable.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.IPAdressToken.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
            <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)"/>
            </summary>
            <param name="other">The other instance.</param>
            <returns>A value indicating the degree of similarity to the provided segment element.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.IPAdressToken.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.IPAdressToken.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode(object)"/>
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.MeasureToken">
            <summary>
            A <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token"/> representing a measurement.
            </summary>
            <seealso cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken" />
            <remarks>A measurement is defined as a combination of a number followed by a unit.</remarks>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.MeasureToken.Type">
            <summary>
            Gets the type of <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token" />.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.MeasureToken.Unit">
            <summary>
            Gets or sets the unit.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.MeasureToken.UnitSeparator">
            <summary>
            Gets or sets the unit separator.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.MeasureToken.UnitString">
            <summary>
            Gets or sets the unit string, in case the unit is unknown.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.MeasureToken.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.MeasureToken"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.MeasureToken.#ctor(System.String,System.String,System.String,System.String,Sdl.Core.Bcm.BcmModel.Tokenization.Unit,System.String,System.Char,System.Globalization.NumberFormatInfo)">
            <summary>
            Initializes a new instance with the specified values.
            </summary>
            <param name="text">The token text to assign to the token</param>
            <param name="sign">The sign of the numeric value</param>
            <param name="decimalPart">The decimal part of the numeric value</param>
            <param name="fractionalPart">The fractional part of the numeric value</param>
            <param name="unit">The unit of the measurement</param>
            <param name="unitString">The textual unit of the measurement</param>
            <param name="unitSeparator">The unit separator used between the numeric part and the unit</param>
            <param name="format">The token's culture default number format info, to determine
            whether primary or alternate separators are used</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.MeasureToken.#ctor(System.String,Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken,Sdl.Core.Bcm.BcmModel.Tokenization.Unit,System.String,System.Char)">
            <summary>
            Initializes a new instance with the specified values. This constructor is for internal
            purposes only and should not be used directly.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.MeasureToken.#ctor(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.MeasureToken)">
            <summary>
            Initializes a new instance with the values of another instance, creating a deep copy.
            </summary>
            <param name="other">The instance to create a copy of</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.MeasureToken.Clone">
            <summary>
            See <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.Clone"/>
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.MeasureToken.IsPlaceable">
            <summary>
            <see cref="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.IsPlaceable"/>. Always <c>true</c> for this class.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.MeasureToken.IsSubstitutable">
            <summary>
            <see cref="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.IsSubstitutable"/>. Always <c>true</c> for this class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.MeasureToken.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
            <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)"/>
            </summary>
            <param name="other">The other instance.</param>
            <returns>A value indicating the degree of similarity to the provided segment element.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.MeasureToken.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.MeasureToken.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode()"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.MeasureToken.SetValue(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token,System.Boolean)">
            <summary>
            Overwrites the current token's value with the value from <paramref name="blueprint"/>, which
            also must be a <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.MeasureToken"/>. Note that only the value and the type are
            overwritten, not the textual representation. 
            </summary>
            <param name="blueprint">The token to take the value from</param>
            <param name="keepNumericSeparators">Applicable to numeric (number and measurement) tokens only: if true, do not
            override the original group and decimal separators.</param>
            <returns>A flag indicating whether the token's value or type were changed.</returns>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.MeasureToken.IsValid">
            <summary>
            Gets a boolean value which indicates whether this measurement is valid. A measurement
            is valid if either the unit is not the default unit (<see cref="F:Unit.NoUnit"/>) or
            the <see cref="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.MeasureToken.UnitString"/> is set. In most cases, both are set by the tokenizer.
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken">
            <summary>
            A <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token"/> representing a numerical value.
            </summary>
            <seealso cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token" />
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.Type">
            <summary>
            Gets the type of <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token" />.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.CanonicalNumber">
            <summary>
                The canonical number, i.e. the default representation of the number value
                as a sequence of the optional minus character, the raw decimal digits, a full
                stop character, and the sequence of fractional digits.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.Value">
            <summary>
                Gets or sets the numeric value. Do not use the setter, it is for internal purposes only.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.ValueValid">
            <summary>
                Gets or sets the flag whether the numeric value is valid or not. Do not use the setter, it is for internal purposes
                only.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.Sign">
            <summary>
                Gets or sets the sign.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.RawSign">
            <summary>
                Gets or sets the "raw" sign, i.e. the textual representation of the sign
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.DecimalSeparator">
            <summary>
                Gets or sets the decimal separator
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.GroupSeparator">
            <summary>
                Gets or sets the group separator
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.AlternateGroupSeparator">
            <summary>
                Gets or sets an alternate group separator, which is a single char if an alternate
                separator is used, or the null character if no alternate separator is used.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.AlternateDecimalSeparator">
            <summary>
                Gets or sets an alternate decimal separator, which is a single char if an alternate
                separator is used, or the null character if no alternate separator is used.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.RawFractionalDigits">
            <summary>
                Gets or sets the raw fractional digits, which are a sequence of digits without
                separators or signs.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.RawDecimalDigits">
            <summary>
                Gets or sets the raw decimal digits, which are a sequence of digits without
                separators or signs.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.#ctor(System.String,System.String,System.String,System.String,System.Globalization.NumberFormatInfo)">
            <summary>
            Initializes a new instance with the specified values.
            </summary>
            <param name="text">The token text</param>
            <param name="sign">The sign of the numeric value</param>
            <param name="decimalPart">The decimal part of the numeric value</param>
            <param name="fractionalPart">The fractional part of the numeric value</param>
            <param name="format">
                The number format of the token's culture, used to determine
                whether default or alternate separators were used
            </param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.#ctor(System.String,Sdl.Core.Bcm.BcmModel.Tokenization.NumericSeparator,Sdl.Core.Bcm.BcmModel.Tokenization.NumericSeparator,System.Char,System.Char,Sdl.Core.Bcm.BcmModel.Tokenization.Sign,System.String,System.String,System.String)">
            <summary>
                Initializes a new instance with the specified values.
            </summary>
            <param name="text">The text of the token, as it appeared in the input</param>
            <param name="groupSeparator">The type of group separator used</param>
            <param name="decimalSeparator">The type of decimal separator used</param>
            <param name="alternateGroupSeparator">The character of an alternative group separator, if used</param>
            <param name="alternateDecimalSeparator">The character of an alternative decimal separator, if used</param>
            <param name="sign">The type of sign used</param>
            <param name="rawSign">The "raw text" of the sign</param>
            <param name="rawDecimalDigits">The "raw decimal digits", without separators, between 0-9</param>
            <param name="rawFractionalDigits">The "raw fractional digits", without separators, between 0-9</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.#ctor(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken)">
            <summary>
                Initializes a new instance with the values of another instance, creating a deep copy.
            </summary>
            <param name="other">The instance to copy</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.Clone">
            <summary>
                See <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.Clone" />
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
                <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)" />
            </summary>
            <param name="other">The other instance.</param>
            <returns>A value indicating the degree of similarity to the provided segment element.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.Equals(System.Object)">
            <summary>
                <see cref="M:System.Object.Equals(object)" />
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>
                true if the specified object is equal to the current object;
                otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.GetHashCode">
            <summary>
                <see cref="M:System.Object.GetHashCode(object)" />
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.IsPlaceable">
            <summary>
                <see cref="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.IsPlaceable" />. Always <c>true</c> for this class.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.IsSubstitutable">
            <summary>
                <see cref="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.IsSubstitutable" />. Always <c>true</c> for this class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.SetValue(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token,System.Boolean)">
            <summary>
                Overwrites the current token's value with the value from <paramref name="blueprint" />, which
                also must be a <see cref="!:System.DateTimeToken" />. Note that only the value and the type are
                overwritten, not the textual representation.
            </summary>
            <param name="blueprint">The token to take the value from</param>
            <param name="keepNumericSeparators">
                Applicable to numeric (number and measurement) tokens only: if true, do not
                override the original group and decimal separators.
            </param>
            <returns>A flag indicating whether the token's value or type were changed.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.SetValue(System.String,System.String,System.String,System.Globalization.NumberFormatInfo)">
            <summary>
                Overwrites the current token values with the specified values.
            </summary>
            <param name="sign">The sign of the numeric value</param>
            <param name="decimalPart">The decimal part of the numeric value</param>
            <param name="fractionalPart">The fractional part of the numeric value</param>
            <param name="format">
                The number format of the token's culture, used to determine
                whether default or alternate separators were used
            </param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.FormatNumber(System.Globalization.CultureInfo)">
            <summary>
                Format the number according to the provided culture, applying overrides for
                separators as appropriate. This method uses a proprietary implementation for
                the formatting and does not use the default .Net formatting methods.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.NumberToken.FormatNumber(System.Globalization.NumberFormatInfo)">
            <summary>
                Format the number according to the provided number format information, applying overrides for
                separators as appropriate. This method uses a proprietary implementation for
                the formatting and does not use the default .Net formatting methods.
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.TagToken">
            <summary>
            A <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token"/> representing a tag element.
            </summary>
            <seealso cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token" />
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.TagToken.Type">
            <summary>
            Gets the type of <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token" />.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.TagToken.TagType">
            <summary>
            Gets or sets the tag type.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.TagToken.Anchor">
            <summary>
            Gets or sets the tag anchor, which is used to bracket two tags (connect start and end tag). The anchor
            is only relevant for start and end tags and has no cross-segment semantics.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.TagToken.AlignmentAnchor">
            <summary>
            Gets or sets the alignment anchor, which is used to align cross-segment tags. It only needs to be
            set for the start tag.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.TagToken.TagId">
            <summary>
            Gets or sets the tag ID which is a cross-format ID assigned by the filters and which may be
            used to represent a cross-format formatting class (such as "bold").
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.TagToken.TextEquivalent">
            <summary>
            Gets or sets the text equivalent string. This will only be valid for text placeholder tags.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.TagToken.CanHide">
            <summary>
            Gets or sets the CanHide flag
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.TagToken.#ctor">
            <summary>
            Initializes a new instance with default values (used for XML serialization only).
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.TagToken.#ctor(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.TagToken)">
            <summary>
            Initializes a new instance of the Tag class from another instance.
            </summary>
            <param name="other">The other instance.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.TagToken.#ctor(Sdl.Core.Bcm.BcmModel.Tokenization.TagType,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the Tag class with the specified type and anchor. The alignment anchor will be
            set to zero.
            </summary>
            <param name="type">The tag type.</param>
            <param name="tagId">The tag ID (user-defined)</param>
            <param name="anchor">The tag anchor.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.TagToken.#ctor(Sdl.Core.Bcm.BcmModel.Tokenization.TagType,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the Tag class with the specified type and anchor.
            </summary>
            <param name="type">The tag type.</param>
            <param name="tagId">The tag ID (user-defined)</param>
            <param name="anchor">The tag anchor.</param>
            <param name="alignmentAnchor">An alignment anchor (cross-segment), if available</param>
            <param name="textEquivalent">A text equivalent string (ignored if the tag type is not TextPlaceholder or LockedContent)</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.TagToken.#ctor(Sdl.Core.Bcm.BcmModel.Tokenization.TagType,System.String,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the Tag class with the specified type and anchor.
            </summary>
            <param name="type">The tag type.</param>
            <param name="tagId">The tag ID (user-defined)</param>
            <param name="anchor">The tag anchor.</param>
            <param name="alignmentAnchor">An alignment anchor (cross-segment), if available</param>
            <param name="textEquivalent">A text equivalent string (ignored if the tag type is not TextPlaceholder or LockedContent)</param>
            <param name="canHide">True if the tag represents inline formatting, false otherwise</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.TagToken.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.TagToken.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
            Computes the degree of similarity to another instance.
            </summary>
            <param name="other">The other instance.</param>
            <returns>
            A value indicating the degree of similarity to the provided segment element.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.TagToken.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.TagToken.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode"/>
            </summary>
            <returns>A hash code for this object</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.TagToken.GetWeakHashCode">
            <summary>
            See <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.GetWeakHashCode"/>
            </summary>
            <returns>A hash code independent of tag anchors.</returns>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.TagToken.IsPlaceable">
            <summary>
            <see cref="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.IsPlaceable"/>. Always <c>true</c> for this class.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.TagToken.IsSubstitutable">
            <summary>
            <see cref="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.IsSubstitutable"/>. Always <c>true</c> for this class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.TagToken.ToString">
            <summary>
            <see cref="M:System.Object.ToString"/>
            </summary>
            <returns>A string representation of the object, for display purposes.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.TagToken.SeriliazedWihoutAnchor">
            <summary>
            Same as ToString, but doesn't includes AlignmentAnchor
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token">
            <summary>
            Abstract class for different token implementations.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.Text">
            <summary>
            Gets or sets the token text.
            </summary>
            <value>
            The token text.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.Span">
            <summary>
            Gets or sets the span of text in the <see cref="T:Sdl.Core.Bcm.BcmModel.Segment"/> representing the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token"/>.
            </summary>
            <value>
            The text span.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.#ctor(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
            Initializes a new instance with the values from another instance, creating a deep copy.
            </summary>
            <param name="other">The instance to copy</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.#ctor(System.String)">
            <summary>
            Initializes a new instance with the specified token text.
            </summary>
            <param name="text">The token text</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.Equals(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.GetWeakHashCode">
            <summary>
            Gets the weak hash code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
            Computes the degree of similarity to another instance.
            </summary>
            <param name="other">The other instance.</param>
            <returns>A value indicating the degree of similarity to the provided segment element.</returns>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.IsPlaceable">
            <summary>
            Gets a boolean value indicating whether this token represents a placeable. 
            Always returns <c>false</c> for this class. Derived
            classes should override appropriately.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.IsSubstitutable">
            <summary>
            Gets a boolean value indicating whether this token can be substituted (e.g. auto-localized) across segments. 
            All substitutables are placeables, but not all placeables can be substituted (e.g. acronyms).
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.Type">
            <summary>
            Gets the type of <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token"/>. Should be overriden with names that uniquely identify the implementations.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.URIToken">
            <summary>
            An URI token that is placeable but is not substitutable.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.URIToken.Type">
            <summary>
            Gets the type of <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token" />.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.URIToken.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.URIToken"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.URIToken.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.URIToken"/> class.
            </summary>
            <param name="text">The token text</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.URIToken.#ctor(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.URIToken"/> class.
            </summary>
            <param name="other">The instance to copy</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.URIToken.Clone">
            <summary>
            See <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.Clone"/>
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.URIToken.IsPlaceable">
            <summary>
            <see cref="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.IsPlaceable"/>. Returns <c>true</c> if the token represents
            an acronym, a variable, a URI, or a generic text placeable.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.URIToken.IsSubstitutable">
            <summary>
            <see cref="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.IsSubstitutable"/>. Returns <c>true</c> if this token represents
            a variable.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.URIToken.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
            <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)"/>
            </summary>
            <param name="other">The other instance.</param>
            <returns>A value indicating the degree of similarity to the provided segment element.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.URIToken.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.URIToken.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode(object)"/>
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.VariableToken">
            <summary>
            A <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token"/> representing a substitutable variable.
            </summary>
            <seealso cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token" />
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.VariableToken.Type">
            <summary>
            Gets the type of <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token" />.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.VariableToken.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.VariableToken"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.VariableToken.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.VariableToken"/> class.
            </summary>
            <param name="text">The token text</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.VariableToken.#ctor(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
            Initializes a new instance with the values from another instance, creating a deep copy.
            </summary>
            <param name="other">The instance to create a copy for</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.VariableToken.Clone">
            <summary>
            See <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.Clone"/>
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.VariableToken.IsSubstitutable">
            <summary>
            <see cref="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.IsSubstitutable"/>. Returns <c>true</c> if this token represents
            a variable.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.VariableToken.IsPlaceable">
            <summary>
            <see cref="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.IsPlaceable"/>. Returns <c>true</c> if the token represents
            an acronym, a variable, a URI, or a generic text placeable.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.VariableToken.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
            <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)"/>
            </summary>
            <param name="other">The other instance.</param>
            <returns>A value indicating the degree of similarity to the provided segment element.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.VariableToken.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.VariableToken.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode(object)"/>
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.WhiteSpaceToken">
            <summary>
            A <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token"/> representing a a non-empty sequence of whitespace characters.
            </summary>
            <seealso cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token" />
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.WhiteSpaceToken.Type">
            <summary>
            Gets the type of <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token" />.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.WhiteSpaceToken.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.WhiteSpaceToken"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.WhiteSpaceToken.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.WhiteSpaceToken"/> class.
            </summary>
            <param name="text">The token text</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.WhiteSpaceToken.#ctor(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.WhiteSpaceToken"/> class.
            </summary>
            <param name="other">The instance to copy</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.WhiteSpaceToken.Clone">
            <summary>
            See <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.Clone"/>
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.WhiteSpaceToken.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
            <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)"/>
            </summary>
            <param name="other">The other instance.</param>
            <returns>A value indicating the degree of similarity to the provided segment element.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.WhiteSpaceToken.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.WhiteSpaceToken.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode(object)"/>
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.WordToken">
            <summary>
            A <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token"/> which represents a non-specific word.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.WordToken.Type">
            <summary>
            Gets the type of <see cref="T:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token" />.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.WordToken.Stem">
            <summary>
            An optional stem to assign to this token. Stems are used for TM search and scoring.
            </summary>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.WordToken.IsStopword">
            <summary>
            Gets or sets whether this token is a stop word.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.WordToken.#ctor">
            <summary>
            Initializes a new instance with default values
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.WordToken.#ctor(System.String)">
            <summary>
            Initializes a new instance with the specified token text
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.WordToken.#ctor(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.WordToken)">
            <summary>
            Initializes a new instance with the values from another instance, creating a deep copy.
            </summary>
            <param name="other">The instance to create a copy for</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.WordToken.Clone">
            <summary>
            See <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.Clone"/>
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.WordToken.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)">
            <summary>
            <see cref="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token.GetSimilarity(Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.Token)"/>
            </summary>
            <param name="other">The other instance.</param>
            <returns>A value indicating the degree of similarity to the provided segment element.</returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.WordToken.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.Tokenization.Tokens.WordToken.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode(object)"/>
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.Unit">
            <summary>
            Enumerates the units supported by Sdl.LanguagePlatform.Core.Tokenization.Unit
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Mmm">
            <summary>
            Metric millimeters
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Mcm">
            <summary>
            Metric centimeters
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Mdm">
            <summary>
            Metric decimeters
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Mm">
            <summary>
            Metric meters
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Mkm">
            <summary>
            Metric kilometers
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Mmm2">
            <summary>
            Metric square millimeters
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Mcm2">
            <summary>
            Metric square centimeters
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Mm2">
            <summary>
            Metric square meters
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Ma">
            <summary>
            Metric are
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Mha">
            <summary>
            Metric hectare
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Mkm2">
            <summary>
            Metric square kilometers
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Mmg">
            <summary>
            Metric milligrams
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Mg">
            <summary>
            Metric grams
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Mkg">
            <summary>
            Metric kilograms
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Mt">
            <summary>
            Metric tons
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Mml">
            <summary>
            Metric milliliters
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Mcm3">
            <summary>
            Metric cubic centimeters
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Mcl">
            <summary>
            Metric centiliters
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Mdl">
            <summary>
            Metric deciliters
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Ml">
            <summary>
            Metric liters
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Mm3">
            <summary>
            Metric cubic meters
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Mcentigrade">
            <summary>
            Mcentigrade
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Mfahrenheit">
            <summary>
            Mfahrenheit
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Mkelvin">
            <summary>
            Mkelvin
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Mpercent">
            <summary>
            Mpercent
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Mdegree">
            <summary>
            Mdegree
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISin">
            <summary>
            BISin
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISft">
            <summary>
            BISft
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISyd">
            <summary>
            BISyd
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISfurlong">
            <summary>
            BISfurlong
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISmi">
            <summary>
            BISmi
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISin2">
            <summary>
            BISin2
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISft2">
            <summary>
            BISft2
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISyd2">
            <summary>
            BISyd2
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISacre">
            <summary>
            BISacre
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISmi2">
            <summary>
            BISmi2
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISoz">
            <summary>
            BISoz
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISlb">
            <summary>
            BISlb
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISstone">
            <summary>
            BISstone
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISshortHW">
            <summary>
            BISshortHW
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISlongHW">
            <summary>
            BISlongHW
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISshortTon">
            <summary>
            BISshortTon
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISlongTon">
            <summary>
            BISlongTon
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISflozUK">
            <summary>
            BISflozUK
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISptUK">
            <summary>
            BISptUK
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISqtUK">
            <summary>
            BISqtUK
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISgalUK">
            <summary>
            BISgalUK
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISbuUK">
            <summary>
            BISbuUK
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISflozUS">
            <summary>
            BISflozUS
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISptUS">
            <summary>
            BISptUS
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISgalUS">
            <summary>
            BISgalUS
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISptUSDry">
            <summary>
            BISptUSDry
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.BISbuUSDry">
            <summary>
            BISbuUSDry
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Other">
            <summary>
            The unit represents another, general unit for which no cross-system conversion will
            be available.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.Currency">
            <summary>
            The unit represents a currency
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.Unit.NoUnit">
            <summary>
            A sentinel, should not be used
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.UnitSystem">
            <summary>
            Enumeration with different measurement unit systems.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.UnitSystem.Metric">
            <summary>
            Metric
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.UnitSystem.BIS">
            <summary>
            BIS (British Imperial System)
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.UnitSystem.BISUK">
            <summary>
            BIS (United Kingdom)
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.UnitSystem.BISUSFluid">
            <summary>
            US Fluid Measure
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.UnitSystem.BISUSDry">
            <summary>
            US Dry Measure
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.UnitSystem.NoSystem">
            <summary>
            No particular system, unknown, or not yet identified
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.Tokenization.UnitType">
            <summary>
            Enumeration of different measurement unit types.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.UnitType.Length">
            <summary>
            Length
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.UnitType.Area">
            <summary>
            Area
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.UnitType.Mass">
            <summary>
            Mass
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.UnitType.Capacity">
            <summary>
            Capacity
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.UnitType.Temperature">
            <summary>
            Temperature
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.UnitType.Other">
            <summary>
            Other (not participating in auto-conversion)
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.Tokenization.UnitType.NoType">
            <summary>
            Unknown or untyped (such as percent)
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.TranslationOrigin">
            <summary>
            Contains information on the origin of translation.
            </summary>
            <seealso cref="T:Sdl.Core.Bcm.BcmModel.MetadataContainer" />
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.TranslationOrigin.OriginType">
            <summary>
            Gets or sets the translation origin type.
            </summary>
            <value>
            The translation origin type.
            </value>
            <remarks>Seed <see cref="T:Sdl.Core.Bcm.BcmModel.Common.DefaultTranslationOrigin"/> for default values.</remarks>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.TranslationOrigin.OriginSystem">
            <summary>
            Gets or sets the origin system.
            </summary>
            <value>
            The originating system name for a segment translation.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.TranslationOrigin.MatchPercent">
            <summary>
            Gets or sets the match percent.
            </summary>
            <value>
            The match value for a translation memory match, or the confidence level for a machine translation.
            Should be a percentage value from 0 - 100%
            </value>
            <remarks>
            <para>
            When a match gets adapted by interactive translation, the original match value can be read from
            this property on the <see cref="P:Sdl.Core.Bcm.BcmModel.TranslationOrigin.OriginBeforeAdaptation"/> properties.
            </para>        
            </remarks>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.TranslationOrigin.IsStructureContextMatch">
            <summary>
            Gets or sets a value indicating whether this instance is structure context match.
            </summary>
            <value>
              <c>true</c> if this instance is structure context match; otherwise, <c>false</c>.
            </value>
            <remarks>     
            If <c>true</c>, indicates that the translation originates from a system that takes 
            structural context information into account, and that the structure context matches.
            </remarks>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.TranslationOrigin.IsSidContextMatch">
            <summary>
            If <c>true</c>, indicates that the translation originates from a system that takes 
            ID context information into account, and that the ID context matches.
            </summary>
            <value>
              <c>true</c> if this instance is sID context match; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.TranslationOrigin.TextContextMatchLevel">
            <summary>
            Indicates whether the match originates from a source where the textual surrounding content 
            corresponds to the text surrounding this segment.
            </summary>
            <value>
            The <see cref="T:Sdl.Core.Bcm.BcmModel.TextContextMatchLevel"/> value.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.TranslationOrigin.OriginalTranslationHash">
            <summary>
            A hash value that identifies the entry in the TM that provided the translation. This is used 
            to update the correct TM entry if a translator provides an updated version of the translation.
            </summary>
            <value>
            The original translation hash.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.TranslationOrigin.OriginBeforeAdaptation">
            <summary>
            Gets or sets the <see cref="T:Sdl.Core.Bcm.BcmModel.TranslationOrigin"/> before adaptation.
            </summary>
            <value>
            The <see cref="T:Sdl.Core.Bcm.BcmModel.TranslationOrigin"/> before adaptation.
            </value>
            <remarks><c>Null</c> or the origin information for the originally adapted target content.</remarks>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.TranslationOrigin.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.TranslationOrigin"/> class.
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.TranslationOrigin.#ctor(System.String,System.String,System.Int32,System.Boolean,System.Boolean,Sdl.Core.Bcm.BcmModel.TextContextMatchLevel,System.String,Sdl.Core.Bcm.BcmModel.TranslationOrigin)">
            <summary>
            Initializes a new instance of the <see cref="T:Sdl.Core.Bcm.BcmModel.TranslationOrigin"/> class.
            </summary>
            <param name="originType">Type of the origin.</param>
            <param name="originSystem">The origin system.</param>
            <param name="matchPercent">The match percent.</param>
            <param name="isStructureContextMatch">if set to <c>true</c> the translation is a structure context match.</param>
            <param name="isSidContextMatch">if set to <c>true</c> the translation is a sID context match.</param>
            <param name="textContextMatchLevel">The text context match level.</param>
            <param name="originalTranslationHash">The original translation hash.</param>
            <param name="originBeforeAdaptation">The <see cref="T:Sdl.Core.Bcm.BcmModel.TranslationOrigin"/> before adaptation.</param>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.TranslationOrigin.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A deep clone of this instance.</returns>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.TranslationOrigin.CreatedBy">
            <summary>
            Gets or sets the <c>created_by</c> metadata.
            </summary>
            <value>
            The <c>created_by</c> metadata value.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.TranslationOrigin.CreationDate">
            <summary>
            Gets or sets the <c>created_on</c> metadata.
            </summary>
            <value>
            The <c>created_on</c> metadata value.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.TranslationOrigin.LastModifiedUserId">
            <summary>
            Gets or sets the <c>last_modified_by</c> metadata.
            </summary>
            <value>
            The <c>last_modified_by</c> metadata value.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.TranslationOrigin.LastModifiedDate">
            <summary>
            Gets or sets the <c>modified_on</c> metadata.
            </summary>
            <value>
            The <c>modified_on</c> metadata value.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.TranslationOrigin.LastUsedUserId">
            <summary>
            Gets or sets the <c>used_by</c> metadata.
            </summary>
            <value>
            The <c>used_by</c> metadata value.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.TranslationOrigin.LastUsedDate">
            <summary>
            Gets or sets the <c>used_on</c> metadata.
            </summary>
            <value>
            The <c>used_on</c> metadata value.
            </value>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Sdl.Core.Bcm.BcmModel.TranslationOrigin.UseCount" -->
        <member name="P:Sdl.Core.Bcm.BcmModel.TranslationOrigin.CreationDisplayUsername">
            <summary>
            Gets or sets the <c>created_by_username</c> metadata.
            </summary>
            <value>
            The <c>created_by_username</c> metadata value.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.TranslationOrigin.ChangeDisplayUsername">
            <summary>
            Gets or sets the <c>created_by_username</c> metadata.
            </summary>
            <value>
            The <c>created_by_username</c> metadata value.
            </value>
        </member>
        <member name="P:Sdl.Core.Bcm.BcmModel.TranslationOrigin.UseDisplayUsername">
            <summary>
            Gets or sets the <c>use_by_username</c> metadata.
            </summary>
            <value>
            The <c>use_by_username</c> metadata value.
            </value>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.TranslationOrigin.Equals(Sdl.Core.Bcm.BcmModel.TranslationOrigin)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.TranslationOrigin.Equals(System.Object)">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.Core.Bcm.BcmModel.TranslationOrigin.GetHashCode">
            <summary>
            Performs a deep-equals comparison.        
            <seealso cref="M:System.Object.Equals(object)"/>
            </summary>
        </member>
        <member name="T:Sdl.Core.Bcm.BcmModel.TranslationOriginMetaData">
            <summary>
            Metadata keys used for <see cref="T:Sdl.Core.Bcm.BcmModel.TranslationOrigin"/> metadata. 
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.TranslationOriginMetaData.CreatedBy">
            <summary>
            The user who created the translation.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.TranslationOriginMetaData.CreationDate">
            <summary>
            The translation creation date.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.TranslationOriginMetaData.LastModifiedUserId">
            <summary>
            The Id of the last user who updated the translation.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.TranslationOriginMetaData.LastModifiedDate">
            <summary>
            The translation modified date.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.TranslationOriginMetaData.LastUsedUserId">
            <summary>
            The Id of the last user who applied the translation.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.TranslationOriginMetaData.LastUsedDate">
            <summary>
            The date when the translation was last applied.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.TranslationOriginMetaData.UseCount">
            <summary>
            The translation usage count.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.TranslationOriginMetaData.CreationDisplayUsername">
            <summary>
            The display name of the user who created the translation.
            </summary>
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.TranslationOriginMetaData.ChangeDisplayUsername">
            <summary>
            The display name of the user who last modified the translation.
            </summary>
            
        </member>
        <member name="F:Sdl.Core.Bcm.BcmModel.TranslationOriginMetaData.UseDisplayUsername">
            <summary>
            The display name of the user who last applied the translation.
            </summary>        
        </member>
    </members>
</doc>
