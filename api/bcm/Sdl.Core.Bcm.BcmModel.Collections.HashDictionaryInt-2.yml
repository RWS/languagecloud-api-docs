### YamlMime:ManagedReference
items:
- uid: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2
  commentId: T:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2
  id: HashDictionaryInt`2
  parent: Sdl.Core.Bcm.BcmModel.Collections
  children:
  - Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.#ctor
  - Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Add(`0,`1)
  - Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Clear
  - Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.ContainsKey(`0)
  - Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.GetHashCodeInternal(`0)
  - Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Item(`0)
  - Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Remove(`0)
  - Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.TryGetValue(`0,`1@)
  - Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2._backingDictionary
  langs:
  - csharp
  - vb
  name: HashDictionaryInt<TKey, TValue>
  nameWithType: HashDictionaryInt<TKey, TValue>
  fullName: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt<TKey, TValue>
  type: Class
  assemblies:
  - Sdl.Core.Bcm.BcmModel
  namespace: Sdl.Core.Bcm.BcmModel.Collections
  summary: >-
    A dictionary which uses hashes generated from the key to store items in a backing dictionary. We may look at generating
     long hashes eventually if there are many collisions detected.
  example: []
  syntax:
    content: public class HashDictionaryInt<TKey, TValue>
    typeParameters:
    - id: TKey
      description: Item from which key will be derived. At the moment, GetHashCode is called on the key to use as actual key in backing Dictionary
    - id: TValue
      description: value for given key being stored in dictionary
    content.vb: Public Class HashDictionaryInt(Of TKey, TValue)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: HashDictionaryInt(Of TKey, TValue)
  fullName.vb: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt(Of TKey, TValue)
  name.vb: HashDictionaryInt(Of TKey, TValue)
- uid: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2._backingDictionary
  commentId: F:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2._backingDictionary
  id: _backingDictionary
  parent: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2
  langs:
  - csharp
  - vb
  name: _backingDictionary
  nameWithType: HashDictionaryInt<TKey, TValue>._backingDictionary
  fullName: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt<TKey, TValue>._backingDictionary
  type: Field
  assemblies:
  - Sdl.Core.Bcm.BcmModel
  namespace: Sdl.Core.Bcm.BcmModel.Collections
  summary: The backing dictionary.
  example: []
  syntax:
    content: public Dictionary<int, List<KeyValuePair<TKey, TValue>>> _backingDictionary
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}}
    content.vb: Public _backingDictionary As Dictionary(Of Integer, List(Of KeyValuePair(Of TKey, TValue)))
  nameWithType.vb: HashDictionaryInt(Of TKey, TValue)._backingDictionary
  fullName.vb: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt(Of TKey, TValue)._backingDictionary
- uid: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.#ctor
  commentId: M:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.#ctor
  id: '#ctor'
  parent: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2
  langs:
  - csharp
  - vb
  name: HashDictionaryInt()
  nameWithType: HashDictionaryInt<TKey, TValue>.HashDictionaryInt()
  fullName: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt<TKey, TValue>.HashDictionaryInt()
  type: Constructor
  assemblies:
  - Sdl.Core.Bcm.BcmModel
  namespace: Sdl.Core.Bcm.BcmModel.Collections
  summary: Initializes a new instance of the <xref href="Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt%602" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public HashDictionaryInt()
    content.vb: Public Sub New()
  overload: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.#ctor*
  nameWithType.vb: HashDictionaryInt(Of TKey, TValue).New()
  fullName.vb: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt(Of TKey, TValue).New()
  name.vb: New()
- uid: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Add(`0,`1)
  commentId: M:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Add(`0,`1)
  id: Add(`0,`1)
  parent: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2
  langs:
  - csharp
  - vb
  name: Add(TKey, TValue)
  nameWithType: HashDictionaryInt<TKey, TValue>.Add(TKey, TValue)
  fullName: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt<TKey, TValue>.Add(TKey, TValue)
  type: Method
  assemblies:
  - Sdl.Core.Bcm.BcmModel
  namespace: Sdl.Core.Bcm.BcmModel.Collections
  summary: Adds the specified key.
  example: []
  syntax:
    content: public void Add(TKey key, TValue value)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key.
    - id: value
      type: '{TValue}'
      description: The value.
    content.vb: Public Sub Add(key As TKey, value As TValue)
  overload: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Item with same key already exists in collection
  nameWithType.vb: HashDictionaryInt(Of TKey, TValue).Add(TKey, TValue)
  fullName.vb: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt(Of TKey, TValue).Add(TKey, TValue)
- uid: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.ContainsKey(`0)
  commentId: M:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.ContainsKey(`0)
  id: ContainsKey(`0)
  parent: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2
  langs:
  - csharp
  - vb
  name: ContainsKey(TKey)
  nameWithType: HashDictionaryInt<TKey, TValue>.ContainsKey(TKey)
  fullName: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt<TKey, TValue>.ContainsKey(TKey)
  type: Method
  assemblies:
  - Sdl.Core.Bcm.BcmModel
  namespace: Sdl.Core.Bcm.BcmModel.Collections
  summary: Determines whether the collection contains the specified key.
  example: []
  syntax:
    content: public bool ContainsKey(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key.
    return:
      type: System.Boolean
      description: <code>true</code> if the collection contains the specified key; otherwise, <code>false</code>.
    content.vb: Public Function ContainsKey(key As TKey) As Boolean
  overload: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.ContainsKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Multiple matches found in collection
  nameWithType.vb: HashDictionaryInt(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt(Of TKey, TValue).ContainsKey(TKey)
- uid: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Clear
  commentId: M:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Clear
  id: Clear
  parent: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: HashDictionaryInt<TKey, TValue>.Clear()
  fullName: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt<TKey, TValue>.Clear()
  type: Method
  assemblies:
  - Sdl.Core.Bcm.BcmModel
  namespace: Sdl.Core.Bcm.BcmModel.Collections
  summary: Removes all keys and values from this instance.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Clear*
  nameWithType.vb: HashDictionaryInt(Of TKey, TValue).Clear()
  fullName.vb: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt(Of TKey, TValue).Clear()
- uid: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Remove(`0)
  commentId: M:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Remove(`0)
  id: Remove(`0)
  parent: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2
  langs:
  - csharp
  - vb
  name: Remove(TKey)
  nameWithType: HashDictionaryInt<TKey, TValue>.Remove(TKey)
  fullName: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt<TKey, TValue>.Remove(TKey)
  type: Method
  assemblies:
  - Sdl.Core.Bcm.BcmModel
  namespace: Sdl.Core.Bcm.BcmModel.Collections
  summary: Removes the specified key.
  example: []
  syntax:
    content: public bool Remove(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function Remove(key As TKey) As Boolean
  overload: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Remove*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Multiple matches found in collection
  nameWithType.vb: HashDictionaryInt(Of TKey, TValue).Remove(TKey)
  fullName.vb: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt(Of TKey, TValue).Remove(TKey)
- uid: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.TryGetValue(`0,`1@)
  commentId: M:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.TryGetValue(`0,`1@)
  id: TryGetValue(`0,`1@)
  parent: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2
  langs:
  - csharp
  - vb
  name: TryGetValue(TKey, out TValue)
  nameWithType: HashDictionaryInt<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt<TKey, TValue>.TryGetValue(TKey, out TValue)
  type: Method
  assemblies:
  - Sdl.Core.Bcm.BcmModel
  namespace: Sdl.Core.Bcm.BcmModel.Collections
  summary: Tries to get a value by key.
  example: []
  syntax:
    content: public bool TryGetValue(TKey key, out TValue value)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key.
    - id: value
      type: '{TValue}'
      description: The value.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function TryGetValue(key As TKey, value As TValue) As Boolean
  overload: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.TryGetValue*
  nameWithType.vb: HashDictionaryInt(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt(Of TKey, TValue).TryGetValue(TKey, TValue)
  name.vb: TryGetValue(TKey, TValue)
- uid: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.GetHashCodeInternal(`0)
  commentId: M:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.GetHashCodeInternal(`0)
  id: GetHashCodeInternal(`0)
  parent: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2
  langs:
  - csharp
  - vb
  name: GetHashCodeInternal(TKey)
  nameWithType: HashDictionaryInt<TKey, TValue>.GetHashCodeInternal(TKey)
  fullName: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt<TKey, TValue>.GetHashCodeInternal(TKey)
  type: Method
  assemblies:
  - Sdl.Core.Bcm.BcmModel
  namespace: Sdl.Core.Bcm.BcmModel.Collections
  summary: Gets the internal hash code used in the backing dictionary.
  example: []
  syntax:
    content: protected virtual int GetHashCodeInternal(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key.
    return:
      type: System.Int32
      description: ''
    content.vb: Protected Overridable Function GetHashCodeInternal(key As TKey) As Integer
  overload: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.GetHashCodeInternal*
  nameWithType.vb: HashDictionaryInt(Of TKey, TValue).GetHashCodeInternal(TKey)
  fullName.vb: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt(Of TKey, TValue).GetHashCodeInternal(TKey)
- uid: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Item(`0)
  commentId: P:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Item(`0)
  id: Item(`0)
  parent: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2
  langs:
  - csharp
  - vb
  name: this[TKey]
  nameWithType: HashDictionaryInt<TKey, TValue>.this[TKey]
  fullName: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt<TKey, TValue>.this[TKey]
  type: Property
  assemblies:
  - Sdl.Core.Bcm.BcmModel
  namespace: Sdl.Core.Bcm.BcmModel.Collections
  summary: Gets the <code class="typeparamref">TKey</code> with the specified key.
  example: []
  syntax:
    content: public TValue this[TKey key] { get; }
    parameters:
    - id: key
      type: '{TKey}'
      description: The key.
    return:
      type: '{TValue}'
      description: The <code class="typeparamref">TValue</code>.
    content.vb: Public ReadOnly Default Property this[](key As TKey) As TValue
  overload: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Item*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: >-
      Multiple matches found in collection

      or

      Key not found in collection
  nameWithType.vb: HashDictionaryInt(Of TKey, TValue).this[](TKey)
  fullName.vb: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt(Of TKey, TValue).this[](TKey)
  name.vb: this[](TKey)
references:
- uid: Sdl.Core.Bcm.BcmModel.Collections
  commentId: N:Sdl.Core.Bcm.BcmModel.Collections
  isExternal: true
  href: Sdl.html
  name: Sdl.Core.Bcm.BcmModel.Collections
  nameWithType: Sdl.Core.Bcm.BcmModel.Collections
  fullName: Sdl.Core.Bcm.BcmModel.Collections
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.Bcm
    name: Bcm
    isExternal: true
    href: Sdl.Core.Bcm.html
  - name: .
  - uid: Sdl.Core.Bcm.BcmModel
    name: BcmModel
    isExternal: true
    href: Sdl.Core.Bcm.BcmModel.html
  - name: .
  - uid: Sdl.Core.Bcm.BcmModel.Collections
    name: Collections
    isExternal: true
    href: Sdl.Core.Bcm.BcmModel.Collections.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.Bcm
    name: Bcm
    isExternal: true
    href: Sdl.Core.Bcm.html
  - name: .
  - uid: Sdl.Core.Bcm.BcmModel
    name: BcmModel
    isExternal: true
    href: Sdl.Core.Bcm.BcmModel.html
  - name: .
  - uid: Sdl.Core.Bcm.BcmModel.Collections
    name: Collections
    isExternal: true
    href: Sdl.Core.Bcm.BcmModel.Collections.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}}
  commentId: T:System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{`0,`1}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<int, List<KeyValuePair<TKey, TValue>>>
  nameWithType: Dictionary<int, List<KeyValuePair<TKey, TValue>>>
  fullName: System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<TKey, TValue>>>
  nameWithType.vb: Dictionary(Of Integer, List(Of KeyValuePair(Of TKey, TValue)))
  fullName.vb: System.Collections.Generic.Dictionary(Of Integer, System.Collections.Generic.List(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: Dictionary(Of Integer, List(Of KeyValuePair(Of TKey, TValue)))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2
  commentId: T:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2
  isExternal: true
  href: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt-2.html
  name: HashDictionaryInt<TKey, TValue>
  nameWithType: HashDictionaryInt<TKey, TValue>
  fullName: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt<TKey, TValue>
  nameWithType.vb: HashDictionaryInt(Of TKey, TValue)
  fullName.vb: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt(Of TKey, TValue)
  name.vb: HashDictionaryInt(Of TKey, TValue)
  spec.csharp:
  - uid: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2
    name: HashDictionaryInt
    isExternal: true
    href: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2
    name: HashDictionaryInt
    isExternal: true
    href: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.#ctor*
  commentId: Overload:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.#ctor
  isExternal: true
  href: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt-2.html#Sdl_Core_Bcm_BcmModel_Collections_HashDictionaryInt_2__ctor
  name: HashDictionaryInt
  nameWithType: HashDictionaryInt<TKey, TValue>.HashDictionaryInt
  fullName: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt<TKey, TValue>.HashDictionaryInt
  nameWithType.vb: HashDictionaryInt(Of TKey, TValue).New
  fullName.vb: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt(Of TKey, TValue).New
  name.vb: New
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Add*
  commentId: Overload:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Add
  isExternal: true
  href: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt-2.html#Sdl_Core_Bcm_BcmModel_Collections_HashDictionaryInt_2_Add__0__1_
  name: Add
  nameWithType: HashDictionaryInt<TKey, TValue>.Add
  fullName: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt<TKey, TValue>.Add
  nameWithType.vb: HashDictionaryInt(Of TKey, TValue).Add
  fullName.vb: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt(Of TKey, TValue).Add
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.ContainsKey*
  commentId: Overload:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.ContainsKey
  isExternal: true
  href: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt-2.html#Sdl_Core_Bcm_BcmModel_Collections_HashDictionaryInt_2_ContainsKey__0_
  name: ContainsKey
  nameWithType: HashDictionaryInt<TKey, TValue>.ContainsKey
  fullName: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt<TKey, TValue>.ContainsKey
  nameWithType.vb: HashDictionaryInt(Of TKey, TValue).ContainsKey
  fullName.vb: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt(Of TKey, TValue).ContainsKey
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Clear*
  commentId: Overload:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Clear
  isExternal: true
  href: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt-2.html#Sdl_Core_Bcm_BcmModel_Collections_HashDictionaryInt_2_Clear
  name: Clear
  nameWithType: HashDictionaryInt<TKey, TValue>.Clear
  fullName: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt<TKey, TValue>.Clear
  nameWithType.vb: HashDictionaryInt(Of TKey, TValue).Clear
  fullName.vb: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt(Of TKey, TValue).Clear
- uid: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Remove*
  commentId: Overload:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Remove
  isExternal: true
  href: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt-2.html#Sdl_Core_Bcm_BcmModel_Collections_HashDictionaryInt_2_Remove__0_
  name: Remove
  nameWithType: HashDictionaryInt<TKey, TValue>.Remove
  fullName: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt<TKey, TValue>.Remove
  nameWithType.vb: HashDictionaryInt(Of TKey, TValue).Remove
  fullName.vb: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt(Of TKey, TValue).Remove
- uid: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.TryGetValue*
  commentId: Overload:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.TryGetValue
  isExternal: true
  href: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt-2.html#Sdl_Core_Bcm_BcmModel_Collections_HashDictionaryInt_2_TryGetValue__0__1__
  name: TryGetValue
  nameWithType: HashDictionaryInt<TKey, TValue>.TryGetValue
  fullName: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt<TKey, TValue>.TryGetValue
  nameWithType.vb: HashDictionaryInt(Of TKey, TValue).TryGetValue
  fullName.vb: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt(Of TKey, TValue).TryGetValue
- uid: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.GetHashCodeInternal*
  commentId: Overload:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.GetHashCodeInternal
  isExternal: true
  href: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt-2.html#Sdl_Core_Bcm_BcmModel_Collections_HashDictionaryInt_2_GetHashCodeInternal__0_
  name: GetHashCodeInternal
  nameWithType: HashDictionaryInt<TKey, TValue>.GetHashCodeInternal
  fullName: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt<TKey, TValue>.GetHashCodeInternal
  nameWithType.vb: HashDictionaryInt(Of TKey, TValue).GetHashCodeInternal
  fullName.vb: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt(Of TKey, TValue).GetHashCodeInternal
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Item*
  commentId: Overload:Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt`2.Item
  isExternal: true
  href: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt-2.html#Sdl_Core_Bcm_BcmModel_Collections_HashDictionaryInt_2_Item__0_
  name: this
  nameWithType: HashDictionaryInt<TKey, TValue>.this
  fullName: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt<TKey, TValue>.this
  nameWithType.vb: HashDictionaryInt(Of TKey, TValue).this[]
  fullName.vb: Sdl.Core.Bcm.BcmModel.Collections.HashDictionaryInt(Of TKey, TValue).this[]
  name.vb: this[]
