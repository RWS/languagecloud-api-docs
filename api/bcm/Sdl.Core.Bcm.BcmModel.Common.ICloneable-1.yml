### YamlMime:ManagedReference
items:
- uid: Sdl.Core.Bcm.BcmModel.Common.ICloneable`1
  commentId: T:Sdl.Core.Bcm.BcmModel.Common.ICloneable`1
  id: ICloneable`1
  parent: Sdl.Core.Bcm.BcmModel.Common
  children:
  - Sdl.Core.Bcm.BcmModel.Common.ICloneable`1.Clone
  langs:
  - csharp
  - vb
  name: ICloneable<T>
  nameWithType: ICloneable<T>
  fullName: Sdl.Core.Bcm.BcmModel.Common.ICloneable<T>
  type: Interface
  assemblies:
  - Sdl.Core.Bcm.BcmModel
  namespace: Sdl.Core.Bcm.BcmModel.Common
  summary: Typed ICloneable interface.
  example: []
  syntax:
    content: public interface ICloneable<out T>
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Interface ICloneable(Of Out T)
  nameWithType.vb: ICloneable(Of T)
  fullName.vb: Sdl.Core.Bcm.BcmModel.Common.ICloneable(Of T)
  name.vb: ICloneable(Of T)
- uid: Sdl.Core.Bcm.BcmModel.Common.ICloneable`1.Clone
  commentId: M:Sdl.Core.Bcm.BcmModel.Common.ICloneable`1.Clone
  id: Clone
  parent: Sdl.Core.Bcm.BcmModel.Common.ICloneable`1
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: ICloneable<T>.Clone()
  fullName: Sdl.Core.Bcm.BcmModel.Common.ICloneable<T>.Clone()
  type: Method
  assemblies:
  - Sdl.Core.Bcm.BcmModel
  namespace: Sdl.Core.Bcm.BcmModel.Common
  summary: Clones this instance.
  example: []
  syntax:
    content: T Clone()
    return:
      type: '{T}'
      description: ''
    content.vb: Function Clone() As T
  overload: Sdl.Core.Bcm.BcmModel.Common.ICloneable`1.Clone*
  nameWithType.vb: ICloneable(Of T).Clone()
  fullName.vb: Sdl.Core.Bcm.BcmModel.Common.ICloneable(Of T).Clone()
references:
- uid: Sdl.Core.Bcm.BcmModel.Common
  commentId: N:Sdl.Core.Bcm.BcmModel.Common
  isExternal: true
  href: Sdl.html
  name: Sdl.Core.Bcm.BcmModel.Common
  nameWithType: Sdl.Core.Bcm.BcmModel.Common
  fullName: Sdl.Core.Bcm.BcmModel.Common
  spec.csharp:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.Bcm
    name: Bcm
    isExternal: true
    href: Sdl.Core.Bcm.html
  - name: .
  - uid: Sdl.Core.Bcm.BcmModel
    name: BcmModel
    isExternal: true
    href: Sdl.Core.Bcm.BcmModel.html
  - name: .
  - uid: Sdl.Core.Bcm.BcmModel.Common
    name: Common
    isExternal: true
    href: Sdl.Core.Bcm.BcmModel.Common.html
  spec.vb:
  - uid: Sdl
    name: Sdl
    isExternal: true
    href: Sdl.html
  - name: .
  - uid: Sdl.Core
    name: Core
    isExternal: true
    href: Sdl.Core.html
  - name: .
  - uid: Sdl.Core.Bcm
    name: Bcm
    isExternal: true
    href: Sdl.Core.Bcm.html
  - name: .
  - uid: Sdl.Core.Bcm.BcmModel
    name: BcmModel
    isExternal: true
    href: Sdl.Core.Bcm.BcmModel.html
  - name: .
  - uid: Sdl.Core.Bcm.BcmModel.Common
    name: Common
    isExternal: true
    href: Sdl.Core.Bcm.BcmModel.Common.html
- uid: Sdl.Core.Bcm.BcmModel.Common.ICloneable`1.Clone*
  commentId: Overload:Sdl.Core.Bcm.BcmModel.Common.ICloneable`1.Clone
  isExternal: true
  href: Sdl.Core.Bcm.BcmModel.Common.ICloneable-1.html#Sdl_Core_Bcm_BcmModel_Common_ICloneable_1_Clone
  name: Clone
  nameWithType: ICloneable<T>.Clone
  fullName: Sdl.Core.Bcm.BcmModel.Common.ICloneable<T>.Clone
  nameWithType.vb: ICloneable(Of T).Clone
  fullName.vb: Sdl.Core.Bcm.BcmModel.Common.ICloneable(Of T).Clone
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
